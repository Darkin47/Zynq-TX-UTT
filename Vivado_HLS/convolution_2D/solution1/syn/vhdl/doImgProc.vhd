-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity doImgProc is
generic (
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_KERNEL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_KERNEL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    inStream_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_KERNEL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_KERNEL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_KERNEL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_KERNEL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_KERNEL_BUS_WVALID : IN STD_LOGIC;
    s_axi_KERNEL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_KERNEL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_KERNEL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_KERNEL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_KERNEL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_KERNEL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_KERNEL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_KERNEL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_KERNEL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_KERNEL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_KERNEL_BUS_RREADY : IN STD_LOGIC;
    s_axi_KERNEL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_KERNEL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_KERNEL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_KERNEL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_KERNEL_BUS_BREADY : IN STD_LOGIC;
    s_axi_KERNEL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of doImgProc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "doImgProc,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.340000,HLS_SYN_LAT=2359816,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=9,HLS_SYN_FF=1034,HLS_SYN_LUT=1363}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_pp0_stg1_fsm_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_pp0_stg2_fsm_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_pp0_stg3_fsm_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_pp0_stg4_fsm_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_pp0_stg5_fsm_6 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_pp0_stg6_fsm_7 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_pp0_stg7_fsm_8 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_pp0_stg8_fsm_9 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_st17_fsm_10 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv19_40001 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv19_201 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_201 : STD_LOGIC_VECTOR (9 downto 0) := "1000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_28 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal kernel_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_ce0 : STD_LOGIC;
    signal kernel_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal operation : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg1_fsm_2 : STD_LOGIC;
    signal ap_sig_65 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal exitcond1_reg_1305 : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg5_fsm_6 : STD_LOGIC;
    signal ap_sig_82 : BOOLEAN;
    signal tmp_12_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_10 : STD_LOGIC;
    signal ap_sig_95 : BOOLEAN;
    signal exitcond_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_406 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_user_V_reg_419 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_strb_V_reg_432 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_reg_445 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_reg_458 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_assign_reg_471 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_reg_482 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_reg_493 : STD_LOGIC_VECTOR (31 downto 0);
    signal countWait_reg_505 : STD_LOGIC_VECTOR (18 downto 0);
    signal reg_527 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_188 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg4_fsm_5 : STD_LOGIC;
    signal ap_sig_198 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg7_fsm_8 : STD_LOGIC;
    signal ap_sig_208 : BOOLEAN;
    signal reg_531 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg2_fsm_3 : STD_LOGIC;
    signal ap_sig_219 : BOOLEAN;
    signal ap_sig_ioackin_outStream_TREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg8_fsm_9 : STD_LOGIC;
    signal ap_sig_237 : BOOLEAN;
    signal lineBuff_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_535 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg3_fsm_4 : STD_LOGIC;
    signal ap_sig_249 : BOOLEAN;
    signal lineBuff_val_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg6_fsm_7 : STD_LOGIC;
    signal ap_sig_260 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_270 : BOOLEAN;
    signal sel_tmp2_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_1295 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_reg_1300 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_568_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_1309 : STD_LOGIC_VECTOR (63 downto 0);
    signal lineBuff_val_1_addr_reg_1314 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_addr_reg_1319 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1324 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1332 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxCol_1_fu_630_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxCol_1_reg_1337 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_1_fu_638_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_1_reg_1342 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_fu_652_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal phitmp_reg_1351 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_keep_V_1_reg_1356 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_1_reg_1362 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_1_reg_1368 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_id_V_1_reg_1374 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_1_reg_1380 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_assign_1_0_2_fu_703_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_1_0_2_reg_1396 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp3_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_1421 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_sel_tmp3_reg_1421_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_reg_1426 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_1431 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal pixConvolved_2_fu_752_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_2_reg_1436 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineBuff_val_0_load_1_reg_1441 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_load_1_reg_1451 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_1_load_2_reg_1456 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_load_1_reg_1466 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_load_2_reg_1471 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_0_fu_773_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_0_reg_1481 : STD_LOGIC_VECTOR (15 downto 0);
    signal lineBuff_val_1_load_3_reg_1486 : STD_LOGIC_VECTOR (7 downto 0);
    signal lineBuff_val_2_load_3_reg_1491 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_779_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_1496 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_796_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_1504 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_801_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_reg_1509 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_2_fu_813_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_2_reg_1517 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_819_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_reg_1522 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_0_fu_830_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_0_reg_1530 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_1_0_2_i_fu_851_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_1_0_2_i_reg_1535 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_858_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_1541 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_0_2_i_fu_877_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_0_2_i_reg_1549 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_fu_891_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_1_reg_1555 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_1_1_i_fu_901_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_1_1_i_reg_1560 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_907_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_1566 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_1_i_fu_915_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_1_i_reg_1574 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_2_fu_928_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_2_reg_1580 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_1_1_1_i_fu_938_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_1_1_1_i_reg_1585 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_944_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_reg_1591 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_1_1_i_fu_952_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_1_1_i_reg_1599 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_0_fu_965_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_0_reg_1605 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_1_1_2_i_fu_975_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_1_1_2_i_reg_1610 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_981_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_reg_1616 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_1_2_i_fu_989_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_1_2_i_reg_1624 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_1008_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_reg_1630 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_1_2_i_fu_1017_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_1_2_i_reg_1635 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_1023_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_reg_1641 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_2_i_fu_1031_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_2_i_reg_1649 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_2_fu_1044_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_2_reg_1655 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_1054_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_reg_1660 : STD_LOGIC_VECTOR (15 downto 0);
    signal valInWindow_0_minVal_1_2_1_i_fu_1063_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_1_2_1_i_reg_1665 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_1069_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_reg_1671 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_2_1_i_fu_1077_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_maxVal_1_2_1_i_reg_1679 : STD_LOGIC_VECTOR (7 downto 0);
    signal valOutput_fu_1097_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal valOutput_reg_1685 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_1690 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1695 : STD_LOGIC_VECTOR (12 downto 0);
    signal sel_tmp10_fu_1147_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp10_reg_1700 : STD_LOGIC_VECTOR (7 downto 0);
    signal countWait_2_fu_1230_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lineBuff_val_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_0_ce0 : STD_LOGIC;
    signal lineBuff_val_0_we0 : STD_LOGIC;
    signal lineBuff_val_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_0_ce1 : STD_LOGIC;
    signal lineBuff_val_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_1_ce0 : STD_LOGIC;
    signal lineBuff_val_1_we0 : STD_LOGIC;
    signal lineBuff_val_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_1_ce1 : STD_LOGIC;
    signal lineBuff_val_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_ce0 : STD_LOGIC;
    signal lineBuff_val_2_we0 : STD_LOGIC;
    signal lineBuff_val_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lineBuff_val_2_ce1 : STD_LOGIC;
    signal col_assign_phi_fu_475_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_phi_fu_486_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_phi_fu_497_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal countWait_phi_fu_509_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal countWait_1_reg_516 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_0_1_fu_696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_0_2_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_fu_1217_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ioackin_outStream_TREADY : STD_LOGIC := '0';
    signal tmp_3_fu_574_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_fu_590_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxCol_fu_618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal idxRow_2_fu_624_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_3_fu_690_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_fu_709_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_720_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp7_fu_732_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pixConvolved_1_fu_744_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_0_0_fu_773_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_0_fu_773_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_fu_790_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_fu_790_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_fu_790_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_2_fu_813_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_2_fu_813_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_0_fu_830_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_0_fu_830_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_0_1_i_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_minVal_1_0_1_i_fu_840_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_0_2_i_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_0_1_i_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_maxVal_1_0_1_i_fu_866_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_0_2_i_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal window_val_1_1_fu_891_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_fu_891_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_1_i_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_1_i_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal window_val_1_2_fu_928_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_2_fu_928_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_1_1_i_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_1_1_i_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal window_val_2_0_fu_965_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_0_fu_965_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_1_2_i_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_1_2_i_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal window_val_2_1_fu_1002_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_fu_1002_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_fu_1002_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_2_i_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_2_i_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal window_val_2_2_fu_1044_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_2_fu_1044_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_1050_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_2_1_i_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_2_1_i_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_1083_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_1087_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_1092_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_2_2_i_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_2_2_i_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal valInWindow_0_maxVal_1_2_2_i_fu_1134_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal valInWindow_0_minVal_1_2_2_i_fu_1124_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_fu_1140_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_tr_fu_1154_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg_fu_1157_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_1163_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_7_cast_fu_1173_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_fu_1177_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_2_fu_1180_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_10_cast_fu_1186_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal valOutput_1_fu_1190_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_13_fu_1201_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1197_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_fu_1209_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal window_val_0_0_fu_773_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_1_fu_790_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_2_fu_813_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_0_fu_830_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_1_fu_891_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_1_2_fu_928_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_0_fu_965_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_1_fu_1002_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_2_2_fu_1044_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_1220 : BOOLEAN;

    component doImgProc_lineBuff_val_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component doImgProc_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        operation : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component doImgProc_KERNEL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        kernel_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_ce0 : IN STD_LOGIC;
        kernel_q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    doImgProc_CRTL_BUS_s_axi_U : component doImgProc_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        operation => operation);

    doImgProc_KERNEL_BUS_s_axi_U : component doImgProc_KERNEL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_KERNEL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_KERNEL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_KERNEL_BUS_AWVALID,
        AWREADY => s_axi_KERNEL_BUS_AWREADY,
        AWADDR => s_axi_KERNEL_BUS_AWADDR,
        WVALID => s_axi_KERNEL_BUS_WVALID,
        WREADY => s_axi_KERNEL_BUS_WREADY,
        WDATA => s_axi_KERNEL_BUS_WDATA,
        WSTRB => s_axi_KERNEL_BUS_WSTRB,
        ARVALID => s_axi_KERNEL_BUS_ARVALID,
        ARREADY => s_axi_KERNEL_BUS_ARREADY,
        ARADDR => s_axi_KERNEL_BUS_ARADDR,
        RVALID => s_axi_KERNEL_BUS_RVALID,
        RREADY => s_axi_KERNEL_BUS_RREADY,
        RDATA => s_axi_KERNEL_BUS_RDATA,
        RRESP => s_axi_KERNEL_BUS_RRESP,
        BVALID => s_axi_KERNEL_BUS_BVALID,
        BREADY => s_axi_KERNEL_BUS_BREADY,
        BRESP => s_axi_KERNEL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        kernel_address0 => kernel_address0,
        kernel_ce0 => kernel_ce0,
        kernel_q0 => kernel_q0);

    lineBuff_val_0_U : component doImgProc_lineBuff_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => lineBuff_val_0_address0,
        ce0 => lineBuff_val_0_ce0,
        we0 => lineBuff_val_0_we0,
        d0 => lineBuff_val_1_q0,
        q0 => lineBuff_val_0_q0,
        address1 => lineBuff_val_0_address1,
        ce1 => lineBuff_val_0_ce1,
        q1 => lineBuff_val_0_q1);

    lineBuff_val_1_U : component doImgProc_lineBuff_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => lineBuff_val_1_address0,
        ce0 => lineBuff_val_1_ce0,
        we0 => lineBuff_val_1_we0,
        d0 => lineBuff_val_2_q0,
        q0 => lineBuff_val_1_q0,
        address1 => lineBuff_val_1_address1,
        ce1 => lineBuff_val_1_ce1,
        q1 => lineBuff_val_1_q1);

    lineBuff_val_2_U : component doImgProc_lineBuff_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => lineBuff_val_2_address0,
        ce0 => lineBuff_val_2_ce0,
        we0 => lineBuff_val_2_we0,
        d0 => inStream_TDATA,
        q0 => lineBuff_val_2_q0,
        address1 => lineBuff_val_2_address1,
        ce1 => lineBuff_val_2_ce1,
        q1 => lineBuff_val_2_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_outStream_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2) and not(((ap_const_lv1_0 = exitcond_fu_1224_p2) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))))) then 
                    ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_1 = outStream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2) and (ap_const_logic_1 = outStream_TREADY)))) then 
                    ap_reg_ioackin_outStream_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_562_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9) and not((exitcond1_reg_1305 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_assign_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
                col_assign_reg_471 <= idxCol_1_reg_1337;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                col_assign_reg_471 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    countWait_1_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_562_p2)))) then 
                countWait_1_reg_516 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2) and not(((ap_const_lv1_0 = exitcond_fu_1224_p2) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                countWait_1_reg_516 <= countWait_2_fu_1230_p2;
            end if; 
        end if;
    end process;

    countWait_reg_505_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
                countWait_reg_505 <= phitmp_reg_1351;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                countWait_reg_505 <= ap_const_lv19_1;
            end if; 
        end if;
    end process;

    idxRow_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
                idxRow_reg_482 <= idxRow_1_reg_1342;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                idxRow_reg_482 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    pixConvolved_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then 
                pixConvolved_reg_493 <= pixConvolved_2_reg_1436;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                pixConvolved_reg_493 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    reg_535_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_1220) then
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5)) then 
                    reg_535 <= lineBuff_val_0_q1;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) then 
                    reg_535 <= lineBuff_val_0_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then
                ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1 <= exitcond1_reg_1305;
                ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1 <= tmp_12_reg_1347;
                exitcond1_reg_1305 <= exitcond1_fu_562_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then
                ap_reg_ppstg_sel_tmp3_reg_1421_pp0_iter1 <= sel_tmp3_reg_1421;
                ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1 <= sel_tmp6_reg_1426;
                ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1 <= sel_tmp9_reg_1431;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188)))) then
                ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1 <= tmp_dest_V_1_reg_1380;
                ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1 <= tmp_id_V_1_reg_1374;
                ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1 <= tmp_keep_V_1_reg_1356;
                ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1 <= tmp_strb_V_1_reg_1362;
                ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1 <= tmp_user_V_1_reg_1368;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3))) then
                col_assign_1_0_2_reg_1396 <= col_assign_1_0_2_fu_703_p2;
                sel_tmp3_reg_1421 <= sel_tmp3_fu_716_p2;
                sel_tmp6_reg_1426 <= sel_tmp6_fu_728_p2;
                sel_tmp9_reg_1431 <= sel_tmp9_fu_740_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_562_p2))) then
                idxCol_1_reg_1337 <= idxCol_1_fu_630_p3;
                idxRow_1_reg_1342 <= idxRow_1_fu_638_p3;
                phitmp_reg_1351 <= phitmp_fu_652_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4))) then
                lineBuff_val_0_load_1_reg_1441 <= lineBuff_val_0_q1;
                lineBuff_val_1_load_1_reg_1451 <= lineBuff_val_1_q0;
                lineBuff_val_1_load_2_reg_1456 <= lineBuff_val_1_q1;
                lineBuff_val_2_load_1_reg_1466 <= lineBuff_val_2_q0;
                lineBuff_val_2_load_2_reg_1471 <= lineBuff_val_2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_562_p2))) then
                lineBuff_val_1_addr_reg_1314 <= tmp_s_fu_568_p1(9 - 1 downto 0);
                lineBuff_val_2_addr_reg_1319 <= tmp_s_fu_568_p1(9 - 1 downto 0);
                or_cond_reg_1324 <= or_cond_fu_606_p2;
                tmp_11_reg_1332 <= tmp_11_fu_612_p2;
                tmp_12_reg_1347 <= tmp_12_fu_646_p2;
                    tmp_s_reg_1309(31 downto 0) <= tmp_s_fu_568_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5))) then
                lineBuff_val_1_load_3_reg_1486 <= lineBuff_val_1_q1;
                lineBuff_val_2_load_3_reg_1491 <= lineBuff_val_2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3))) then
                pixConvolved_2_reg_1436 <= pixConvolved_2_fu_752_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8)))) then
                reg_527 <= kernel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9)))) then
                reg_531 <= kernel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_7)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)))) then
                reg_540 <= kernel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1))) then
                sel_tmp10_reg_1700 <= sel_tmp10_fu_1147_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                sel_tmp2_reg_1290 <= sel_tmp2_fu_544_p2;
                sel_tmp5_reg_1295 <= sel_tmp5_fu_550_p2;
                sel_tmp8_reg_1300 <= sel_tmp8_fu_556_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not((ap_const_lv1_0 = sel_tmp9_reg_1431)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                tmp1_reg_1630 <= tmp1_fu_1008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) and not((ap_const_lv1_0 = ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1)))) then
                tmp3_reg_1660 <= tmp3_fu_1054_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and not((ap_const_lv1_0 = sel_tmp9_reg_1431)))) then
                tmp4_reg_1504 <= tmp4_fu_796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5) and (ap_const_lv1_0 = sel_tmp9_reg_1431))) then
                tmp_14_reg_1496 <= tmp_14_fu_779_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and (ap_const_lv1_0 = sel_tmp9_reg_1431))) then
                tmp_15_reg_1509 <= tmp_15_fu_801_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_7) and (ap_const_lv1_0 = sel_tmp9_reg_1431))) then
                tmp_16_reg_1522 <= tmp_16_fu_819_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8) and (ap_const_lv1_0 = sel_tmp9_reg_1431))) then
                tmp_17_reg_1541 <= tmp_17_fu_858_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9) and (ap_const_lv1_0 = sel_tmp9_reg_1431))) then
                tmp_18_reg_1566 <= tmp_18_fu_907_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_lv1_0 = sel_tmp9_reg_1431))) then
                tmp_19_reg_1591 <= tmp_19_fu_944_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188)) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                tmp_20_reg_1616 <= tmp_20_fu_981_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                tmp_21_reg_1641 <= tmp_21_fu_1023_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1))) then
                tmp_22_reg_1671 <= tmp_22_fu_1069_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) and not((ap_const_lv1_0 = ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1)))) then
                tmp_6_reg_1690 <= valOutput_fu_1097_p2(15 downto 15);
                tmp_9_reg_1695 <= valOutput_fu_1097_p2(15 downto 3);
                valOutput_reg_1685 <= valOutput_fu_1097_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188)))) then
                tmp_dest_V_1_reg_1380 <= inStream_TDEST;
                tmp_id_V_1_reg_1374 <= inStream_TID;
                tmp_keep_V_1_reg_1356 <= inStream_TKEEP;
                tmp_strb_V_1_reg_1362 <= inStream_TSTRB;
                tmp_user_V_1_reg_1368 <= inStream_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                tmp_dest_V_reg_458 <= ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1;
                tmp_id_V_reg_406 <= ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1;
                tmp_keep_V_reg_445 <= ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1;
                tmp_strb_V_reg_432 <= ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1;
                tmp_user_V_reg_419 <= ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and (ap_const_lv1_0 = sel_tmp6_reg_1426) and not((ap_const_lv1_0 = sel_tmp3_reg_1421)))) then
                valInWindow_0_maxVal_1_0_2_i_reg_1549 <= valInWindow_0_maxVal_1_0_2_i_fu_877_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and (ap_const_lv1_0 = sel_tmp6_reg_1426) and not((ap_const_lv1_0 = sel_tmp3_reg_1421)))) then
                valInWindow_0_maxVal_1_1_1_i_reg_1599 <= valInWindow_0_maxVal_1_1_1_i_fu_952_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188)) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and (ap_const_lv1_0 = sel_tmp6_reg_1426) and not((ap_const_lv1_0 = sel_tmp3_reg_1421)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                valInWindow_0_maxVal_1_1_2_i_reg_1624 <= valInWindow_0_maxVal_1_1_2_i_fu_989_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and (ap_const_lv1_0 = sel_tmp6_reg_1426) and not((ap_const_lv1_0 = sel_tmp3_reg_1421)))) then
                valInWindow_0_maxVal_1_1_i_reg_1574 <= valInWindow_0_maxVal_1_1_i_fu_915_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1) and not((ap_const_lv1_0 = ap_reg_ppstg_sel_tmp3_reg_1421_pp0_iter1)))) then
                valInWindow_0_maxVal_1_2_1_i_reg_1679 <= valInWindow_0_maxVal_1_2_1_i_fu_1077_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and (ap_const_lv1_0 = sel_tmp6_reg_1426) and not((ap_const_lv1_0 = sel_tmp3_reg_1421)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                valInWindow_0_maxVal_1_2_i_reg_1649 <= valInWindow_0_maxVal_1_2_i_fu_1031_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and not((ap_const_lv1_0 = sel_tmp6_reg_1426)))) then
                valInWindow_0_minVal_1_0_2_i_reg_1535 <= valInWindow_0_minVal_1_0_2_i_fu_851_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and not((ap_const_lv1_0 = sel_tmp6_reg_1426)))) then
                valInWindow_0_minVal_1_1_1_i_reg_1585 <= valInWindow_0_minVal_1_1_1_i_fu_938_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188)) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and not((ap_const_lv1_0 = sel_tmp6_reg_1426)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                valInWindow_0_minVal_1_1_2_i_reg_1610 <= valInWindow_0_minVal_1_1_2_i_fu_975_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and not((ap_const_lv1_0 = sel_tmp6_reg_1426)))) then
                valInWindow_0_minVal_1_1_i_reg_1560 <= valInWindow_0_minVal_1_1_i_fu_901_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) and (ap_const_lv1_0 = ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1) and not((ap_const_lv1_0 = ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1)))) then
                valInWindow_0_minVal_1_2_1_i_reg_1665 <= valInWindow_0_minVal_1_2_1_i_fu_1063_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and (ap_const_lv1_0 = sel_tmp9_reg_1431) and not((ap_const_lv1_0 = sel_tmp6_reg_1426)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                valInWindow_0_minVal_1_2_i_reg_1635 <= valInWindow_0_minVal_1_2_i_fu_1017_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5))) then
                window_val_0_0_reg_1481 <= window_val_0_0_fu_773_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_7))) then
                window_val_0_2_reg_1517 <= window_val_0_2_fu_813_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8))) then
                window_val_1_0_reg_1530 <= window_val_1_0_fu_830_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9))) then
                window_val_1_1_reg_1555 <= window_val_1_1_fu_891_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then
                window_val_1_2_reg_1580 <= window_val_1_2_fu_928_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                window_val_2_0_reg_1605 <= window_val_2_0_fu_965_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then
                window_val_2_2_reg_1655 <= window_val_2_2_fu_1044_p2;
            end if;
        end if;
    end process;
    tmp_s_reg_1309(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, exitcond_fu_1224_p2, ap_sig_188, ap_sig_ioackin_outStream_TREADY, exitcond1_fu_562_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_562_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_10;
                end if;
            when ap_ST_pp0_stg1_fsm_2 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))) then
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                end if;
            when ap_ST_pp0_stg2_fsm_3 => 
                ap_NS_fsm <= ap_ST_pp0_stg3_fsm_4;
            when ap_ST_pp0_stg3_fsm_4 => 
                ap_NS_fsm <= ap_ST_pp0_stg4_fsm_5;
            when ap_ST_pp0_stg4_fsm_5 => 
                ap_NS_fsm <= ap_ST_pp0_stg5_fsm_6;
            when ap_ST_pp0_stg5_fsm_6 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg6_fsm_7;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg5_fsm_6;
                end if;
            when ap_ST_pp0_stg6_fsm_7 => 
                ap_NS_fsm <= ap_ST_pp0_stg7_fsm_8;
            when ap_ST_pp0_stg7_fsm_8 => 
                ap_NS_fsm <= ap_ST_pp0_stg8_fsm_9;
            when ap_ST_pp0_stg8_fsm_9 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
            when ap_ST_st17_fsm_10 => 
                if ((not(((ap_const_lv1_0 = exitcond_fu_1224_p2) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and not((ap_const_lv1_0 = exitcond_fu_1224_p2)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((ap_const_lv1_0 = exitcond_fu_1224_p2) and not(((ap_const_lv1_0 = exitcond_fu_1224_p2) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, ap_sig_ioackin_outStream_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and not(((ap_const_lv1_0 = exitcond_fu_1224_p2) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and not((ap_const_lv1_0 = exitcond_fu_1224_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, ap_sig_ioackin_outStream_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and not(((ap_const_lv1_0 = exitcond_fu_1224_p2) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))) and not((ap_const_lv1_0 = exitcond_fu_1224_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_1220_assign_proc : process(ap_reg_ppiten_pp0_it0, exitcond1_reg_1305)
    begin
                ap_sig_1220 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0));
    end process;


    ap_sig_188_assign_proc : process(inStream_TVALID, exitcond1_reg_1305)
    begin
                ap_sig_188 <= ((exitcond1_reg_1305 = ap_const_lv1_0) and (inStream_TVALID = ap_const_logic_0));
    end process;


    ap_sig_198_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_198 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_208_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_208 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_219_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_219 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_237_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_237 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_249_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_249 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_260_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_260 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_270_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_270 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_28_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_28 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_65_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_65 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_82_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_82 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_95_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_95 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_270)
    begin
        if (ap_sig_270) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg1_fsm_2_assign_proc : process(ap_sig_65)
    begin
        if (ap_sig_65) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg2_fsm_3_assign_proc : process(ap_sig_219)
    begin
        if (ap_sig_219) then 
            ap_sig_cseq_ST_pp0_stg2_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg2_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg3_fsm_4_assign_proc : process(ap_sig_249)
    begin
        if (ap_sig_249) then 
            ap_sig_cseq_ST_pp0_stg3_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg3_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg4_fsm_5_assign_proc : process(ap_sig_198)
    begin
        if (ap_sig_198) then 
            ap_sig_cseq_ST_pp0_stg4_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg4_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg5_fsm_6_assign_proc : process(ap_sig_82)
    begin
        if (ap_sig_82) then 
            ap_sig_cseq_ST_pp0_stg5_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg5_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg6_fsm_7_assign_proc : process(ap_sig_260)
    begin
        if (ap_sig_260) then 
            ap_sig_cseq_ST_pp0_stg6_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg6_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg7_fsm_8_assign_proc : process(ap_sig_208)
    begin
        if (ap_sig_208) then 
            ap_sig_cseq_ST_pp0_stg7_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg7_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg8_fsm_9_assign_proc : process(ap_sig_237)
    begin
        if (ap_sig_237) then 
            ap_sig_cseq_ST_pp0_stg8_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg8_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_10_assign_proc : process(ap_sig_95)
    begin
        if (ap_sig_95) then 
            ap_sig_cseq_ST_st17_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_28)
    begin
        if (ap_sig_28) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_outStream_TREADY_assign_proc : process(outStream_TREADY, ap_reg_ioackin_outStream_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)) then 
            ap_sig_ioackin_outStream_TREADY <= outStream_TREADY;
        else 
            ap_sig_ioackin_outStream_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    col_assign_1_0_2_fu_703_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(pixConvolved_phi_fu_497_p4));

    col_assign_phi_fu_475_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, exitcond1_reg_1305, col_assign_reg_471, ap_sig_cseq_ST_pp0_stg0_fsm_1, idxCol_1_reg_1337)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            col_assign_phi_fu_475_p4 <= idxCol_1_reg_1337;
        else 
            col_assign_phi_fu_475_p4 <= col_assign_reg_471;
        end if; 
    end process;

    countWait_2_fu_1230_p2 <= std_logic_vector(unsigned(countWait_1_reg_516) + unsigned(ap_const_lv10_1));

    countWait_phi_fu_509_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, exitcond1_reg_1305, countWait_reg_505, ap_sig_cseq_ST_pp0_stg0_fsm_1, phitmp_reg_1351)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            countWait_phi_fu_509_p4 <= phitmp_reg_1351;
        else 
            countWait_phi_fu_509_p4 <= countWait_reg_505;
        end if; 
    end process;

    exitcond1_fu_562_p2 <= "1" when (countWait_phi_fu_509_p4 = ap_const_lv19_40001) else "0";
    exitcond_fu_1224_p2 <= "1" when (countWait_1_reg_516 = ap_const_lv10_201) else "0";
    icmp4_fu_600_p2 <= "1" when (signed(tmp_4_fu_590_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_fu_584_p2 <= "1" when (signed(tmp_3_fu_574_p4) > signed(ap_const_lv31_0)) else "0";
    idxCol_1_fu_630_p3 <= 
        idxCol_fu_618_p2 when (tmp_11_fu_612_p2(0) = '1') else 
        ap_const_lv32_0;
    idxCol_fu_618_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(col_assign_phi_fu_475_p4));
    idxRow_1_fu_638_p3 <= 
        idxRow_phi_fu_486_p4 when (tmp_11_fu_612_p2(0) = '1') else 
        idxRow_2_fu_624_p2;
    idxRow_2_fu_624_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(idxRow_phi_fu_486_p4));

    idxRow_phi_fu_486_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, exitcond1_reg_1305, idxRow_reg_482, ap_sig_cseq_ST_pp0_stg0_fsm_1, idxRow_1_reg_1342)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_1305 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            idxRow_phi_fu_486_p4 <= idxRow_1_reg_1342;
        else 
            idxRow_phi_fu_486_p4 <= idxRow_reg_482;
        end if; 
    end process;


    inStream_TDATA_blk_n_assign_proc : process(inStream_TVALID, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond1_reg_1305)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0))) then 
            inStream_TDATA_blk_n <= inStream_TVALID;
        else 
            inStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inStream_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond1_reg_1305, ap_sig_188)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))))) then 
            inStream_TREADY <= ap_const_logic_1;
        else 
            inStream_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    kernel_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_sig_cseq_ST_pp0_stg4_fsm_5, ap_sig_cseq_ST_pp0_stg7_fsm_8, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg8_fsm_9, ap_sig_cseq_ST_pp0_stg3_fsm_4, ap_sig_cseq_ST_pp0_stg6_fsm_7, ap_sig_cseq_ST_pp0_stg0_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9)) then 
                kernel_address0 <= ap_const_lv64_8(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8)) then 
                kernel_address0 <= ap_const_lv64_7(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_7)) then 
                kernel_address0 <= ap_const_lv64_6(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6)) then 
                kernel_address0 <= ap_const_lv64_5(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5)) then 
                kernel_address0 <= ap_const_lv64_4(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) then 
                kernel_address0 <= ap_const_lv64_3(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then 
                kernel_address0 <= ap_const_lv64_2(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2)) then 
                kernel_address0 <= ap_const_lv64_1(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then 
                kernel_address0 <= ap_const_lv64_0(4 - 1 downto 0);
            else 
                kernel_address0 <= "XXXX";
            end if;
        else 
            kernel_address0 <= "XXXX";
        end if; 
    end process;


    kernel_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_188, ap_sig_cseq_ST_pp0_stg4_fsm_5, ap_sig_cseq_ST_pp0_stg7_fsm_8, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_ioackin_outStream_TREADY, ap_sig_cseq_ST_pp0_stg8_fsm_9, ap_sig_cseq_ST_pp0_stg3_fsm_4, ap_sig_cseq_ST_pp0_stg6_fsm_7, ap_sig_cseq_ST_pp0_stg0_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_7)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)))) then 
            kernel_ce0 <= ap_const_logic_1;
        else 
            kernel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_0_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, tmp_s_reg_1309, tmp_7_fu_683_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2)) then 
                lineBuff_val_0_address0 <= tmp_s_reg_1309(9 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then 
                lineBuff_val_0_address0 <= tmp_7_fu_683_p1(9 - 1 downto 0);
            else 
                lineBuff_val_0_address0 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_0_address1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4, tmp_25_0_1_fu_696_p1, tmp_25_0_2_fu_759_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) then 
                lineBuff_val_0_address1 <= tmp_25_0_2_fu_759_p1(9 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then 
                lineBuff_val_0_address1 <= tmp_25_0_1_fu_696_p1(9 - 1 downto 0);
            else 
                lineBuff_val_0_address1 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_0_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_188, ap_sig_cseq_ST_pp0_stg2_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)))) then 
            lineBuff_val_0_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_0_ce1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)))) then 
            lineBuff_val_0_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_0_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond1_reg_1305, ap_sig_188)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))))) then 
            lineBuff_val_0_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_s_fu_568_p1, lineBuff_val_1_addr_reg_1314, tmp_7_fu_683_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2)) then 
                lineBuff_val_1_address0 <= lineBuff_val_1_addr_reg_1314;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then 
                lineBuff_val_1_address0 <= tmp_7_fu_683_p1(9 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then 
                lineBuff_val_1_address0 <= tmp_s_fu_568_p1(9 - 1 downto 0);
            else 
                lineBuff_val_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_1_address1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4, tmp_25_0_1_fu_696_p1, tmp_25_0_2_fu_759_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) then 
                lineBuff_val_1_address1 <= tmp_25_0_2_fu_759_p1(9 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then 
                lineBuff_val_1_address1 <= tmp_25_0_1_fu_696_p1(9 - 1 downto 0);
            else 
                lineBuff_val_1_address1 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_188, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg0_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)))) then 
            lineBuff_val_1_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_ce1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)))) then 
            lineBuff_val_1_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_1_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond1_reg_1305, ap_sig_188)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))))) then 
            lineBuff_val_1_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg0_fsm_1, tmp_s_fu_568_p1, lineBuff_val_2_addr_reg_1319, tmp_7_fu_683_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2)) then 
                lineBuff_val_2_address0 <= lineBuff_val_2_addr_reg_1319;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then 
                lineBuff_val_2_address0 <= tmp_7_fu_683_p1(9 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then 
                lineBuff_val_2_address0 <= tmp_s_fu_568_p1(9 - 1 downto 0);
            else 
                lineBuff_val_2_address0 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_2_address1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4, tmp_25_0_1_fu_696_p1, tmp_25_0_2_fu_759_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) then 
                lineBuff_val_2_address1 <= tmp_25_0_2_fu_759_p1(9 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then 
                lineBuff_val_2_address1 <= tmp_25_0_1_fu_696_p1(9 - 1 downto 0);
            else 
                lineBuff_val_2_address1 <= "XXXXXXXXX";
            end if;
        else 
            lineBuff_val_2_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lineBuff_val_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_188, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg0_fsm_1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)))) then 
            lineBuff_val_2_ce0 <= ap_const_logic_1;
        else 
            lineBuff_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_ce1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)))) then 
            lineBuff_val_2_ce1 <= ap_const_logic_1;
        else 
            lineBuff_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lineBuff_val_2_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond1_reg_1305, ap_sig_188)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_1305 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_188))))) then 
            lineBuff_val_2_we0 <= ap_const_logic_1;
        else 
            lineBuff_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_fu_606_p2 <= (icmp_fu_584_p2 and icmp4_fu_600_p2);

    outStream_TDATA_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, tmp_data_V_fu_1217_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2))) then 
            outStream_TDATA <= ap_const_lv8_0;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)))) then 
            outStream_TDATA <= tmp_data_V_fu_1217_p3;
        else 
            outStream_TDATA <= "XXXXXXXX";
        end if; 
    end process;


    outStream_TDATA_blk_n_assign_proc : process(outStream_TREADY, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2)))) then 
            outStream_TDATA_blk_n <= outStream_TREADY;
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_TDEST_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, tmp_dest_V_reg_458, ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2))) then 
            outStream_TDEST <= tmp_dest_V_reg_458;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)))) then 
            outStream_TDEST <= ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1;
        else 
            outStream_TDEST <= "XXXXXX";
        end if; 
    end process;


    outStream_TID_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, tmp_id_V_reg_406, ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2))) then 
            outStream_TID <= tmp_id_V_reg_406;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)))) then 
            outStream_TID <= ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1;
        else 
            outStream_TID <= "XXXXX";
        end if; 
    end process;


    outStream_TKEEP_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, tmp_keep_V_reg_445, ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2))) then 
            outStream_TKEEP <= tmp_keep_V_reg_445;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)))) then 
            outStream_TKEEP <= ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1;
        else 
            outStream_TKEEP <= "X";
        end if; 
    end process;


    outStream_TLAST_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, countWait_1_reg_516)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2))) then 
            outStream_TLAST <= countWait_1_reg_516(9 downto 9);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)))) then 
            outStream_TLAST <= ap_const_lv1_0;
        else 
            outStream_TLAST <= "X";
        end if; 
    end process;


    outStream_TSTRB_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, tmp_strb_V_reg_432, ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2))) then 
            outStream_TSTRB <= tmp_strb_V_reg_432;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)))) then 
            outStream_TSTRB <= ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1;
        else 
            outStream_TSTRB <= "X";
        end if; 
    end process;


    outStream_TUSER_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, tmp_user_V_reg_419, ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2))) then 
            outStream_TUSER <= tmp_user_V_reg_419;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)))) then 
            outStream_TUSER <= ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1;
        else 
            outStream_TUSER <= "XX";
        end if; 
    end process;


    outStream_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1, ap_sig_cseq_ST_st17_fsm_10, exitcond_fu_1224_p2, ap_reg_ioackin_outStream_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) and (ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_10) and (ap_const_lv1_0 = exitcond_fu_1224_p2) and (ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)))) then 
            outStream_TVALID <= ap_const_logic_1;
        else 
            outStream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_neg_fu_1157_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_18_tr_fu_1154_p1));
    p_s_fu_1209_p3 <= 
        ap_const_lv8_0 when (tmp_13_fu_1201_p3(0) = '1') else 
        tmp_10_fu_1197_p1;
    phitmp_fu_652_p2 <= std_logic_vector(unsigned(countWait_phi_fu_509_p4) + unsigned(ap_const_lv19_1));
    pixConvolved_1_fu_744_p3 <= 
        pixConvolved_3_fu_690_p2 when (sel_tmp9_fu_740_p2(0) = '1') else 
        sel_tmp7_fu_732_p3;
    pixConvolved_2_fu_752_p3 <= 
        pixConvolved_1_fu_744_p3 when (tmp_11_reg_1332(0) = '1') else 
        ap_const_lv32_0;
    pixConvolved_3_fu_690_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(pixConvolved_phi_fu_497_p4));

    pixConvolved_phi_fu_497_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, pixConvolved_reg_493, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1, pixConvolved_2_reg_1436)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) then 
            pixConvolved_phi_fu_497_p4 <= pixConvolved_2_reg_1436;
        else 
            pixConvolved_phi_fu_497_p4 <= pixConvolved_reg_493;
        end if; 
    end process;

    sel_tmp10_fu_1147_p3 <= 
        valInWindow_0_minVal_1_2_2_i_fu_1124_p3 when (ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1(0) = '1') else 
        sel_tmp_fu_1140_p3;
    sel_tmp1_fu_709_p3 <= 
        pixConvolved_3_fu_690_p2 when (or_cond_reg_1324(0) = '1') else 
        pixConvolved_phi_fu_497_p4;
    sel_tmp2_fu_544_p2 <= "1" when (operation = ap_const_lv32_2) else "0";
    sel_tmp3_fu_716_p2 <= (or_cond_reg_1324 and sel_tmp2_reg_1290);
    sel_tmp4_fu_720_p3 <= 
        pixConvolved_3_fu_690_p2 when (sel_tmp3_fu_716_p2(0) = '1') else 
        sel_tmp1_fu_709_p3;
    sel_tmp5_fu_550_p2 <= "1" when (operation = ap_const_lv32_1) else "0";
    sel_tmp6_fu_728_p2 <= (or_cond_reg_1324 and sel_tmp5_reg_1295);
    sel_tmp7_fu_732_p3 <= 
        pixConvolved_3_fu_690_p2 when (sel_tmp6_fu_728_p2(0) = '1') else 
        sel_tmp4_fu_720_p3;
    sel_tmp8_fu_556_p2 <= "1" when (operation = ap_const_lv32_0) else "0";
    sel_tmp9_fu_740_p2 <= (or_cond_reg_1324 and sel_tmp8_reg_1300);
    sel_tmp_fu_1140_p3 <= 
        valInWindow_0_maxVal_1_2_2_i_fu_1134_p3 when (ap_reg_ppstg_sel_tmp3_reg_1421_pp0_iter1(0) = '1') else 
        ap_const_lv8_0;
    tmp1_fu_1008_p2 <= std_logic_vector(unsigned(window_val_2_1_fu_1002_p2) + unsigned(window_val_2_0_reg_1605));
    tmp2_fu_1050_p2 <= std_logic_vector(unsigned(window_val_1_1_reg_1555) + unsigned(window_val_1_2_reg_1580));
    tmp3_fu_1054_p2 <= std_logic_vector(unsigned(tmp1_reg_1630) + unsigned(tmp2_fu_1050_p2));
    tmp4_fu_796_p2 <= std_logic_vector(unsigned(window_val_0_0_reg_1481) + unsigned(window_val_0_1_fu_790_p2));
    tmp5_fu_1083_p2 <= std_logic_vector(unsigned(window_val_2_2_reg_1655) + unsigned(window_val_0_2_reg_1517));
    tmp6_fu_1087_p2 <= std_logic_vector(unsigned(window_val_1_0_reg_1530) + unsigned(tmp5_fu_1083_p2));
    tmp7_fu_1092_p2 <= std_logic_vector(unsigned(tmp4_reg_1504) + unsigned(tmp6_fu_1087_p2));
    tmp_10_cast_fu_1186_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_1177_p1),15));
    tmp_10_fu_1197_p1 <= valOutput_1_fu_1190_p3(8 - 1 downto 0);
    tmp_11_0_1_i_fu_862_p2 <= "1" when (unsigned(tmp_15_reg_1509) > unsigned(tmp_14_reg_1496)) else "0";
    tmp_11_0_2_i_fu_872_p2 <= "1" when (unsigned(tmp_16_reg_1522) > unsigned(valInWindow_0_maxVal_1_0_1_i_fu_866_p3)) else "0";
    tmp_11_1_1_i_fu_948_p2 <= "1" when (unsigned(tmp_18_reg_1566) > unsigned(valInWindow_0_maxVal_1_1_i_reg_1574)) else "0";
    tmp_11_1_2_i_fu_985_p2 <= "1" when (unsigned(tmp_19_reg_1591) > unsigned(valInWindow_0_maxVal_1_1_1_i_reg_1599)) else "0";
    tmp_11_1_i_fu_911_p2 <= "1" when (unsigned(tmp_17_reg_1541) > unsigned(valInWindow_0_maxVal_1_0_2_i_reg_1549)) else "0";
    tmp_11_2_1_i_fu_1073_p2 <= "1" when (unsigned(tmp_21_reg_1641) > unsigned(valInWindow_0_maxVal_1_2_i_reg_1649)) else "0";
    tmp_11_2_2_i_fu_1130_p2 <= "1" when (unsigned(tmp_22_reg_1671) > unsigned(valInWindow_0_maxVal_1_2_1_i_reg_1679)) else "0";
    tmp_11_2_i_fu_1027_p2 <= "1" when (unsigned(tmp_20_reg_1616) > unsigned(valInWindow_0_maxVal_1_1_2_i_reg_1624)) else "0";
    tmp_11_fu_612_p2 <= "1" when (signed(col_assign_phi_fu_475_p4) < signed(ap_const_lv32_1FF)) else "0";
    tmp_12_fu_646_p2 <= "1" when (unsigned(countWait_phi_fu_509_p4) > unsigned(ap_const_lv19_201)) else "0";
    tmp_13_fu_1201_p3 <= valOutput_1_fu_1190_p3(14 downto 14);
    tmp_14_fu_779_p1 <= window_val_0_0_fu_773_p2(8 - 1 downto 0);
    tmp_15_fu_801_p1 <= window_val_0_1_fu_790_p2(8 - 1 downto 0);
    tmp_16_fu_819_p1 <= window_val_0_2_fu_813_p2(8 - 1 downto 0);
    tmp_17_fu_858_p1 <= window_val_1_0_fu_830_p2(8 - 1 downto 0);
    tmp_18_fu_907_p1 <= window_val_1_1_fu_891_p2(8 - 1 downto 0);
        tmp_18_tr_fu_1154_p1 <= std_logic_vector(resize(signed(valOutput_reg_1685),17));

    tmp_19_fu_944_p1 <= window_val_1_2_fu_928_p2(8 - 1 downto 0);
        tmp_1_fu_1177_p1 <= std_logic_vector(resize(signed(tmp_9_reg_1695),14));

    tmp_20_fu_981_p1 <= window_val_2_0_fu_965_p2(8 - 1 downto 0);
    tmp_21_fu_1023_p1 <= window_val_2_1_fu_1002_p2(8 - 1 downto 0);
    tmp_22_fu_1069_p1 <= window_val_2_2_fu_1044_p2(8 - 1 downto 0);
    tmp_25_0_1_fu_696_p1 <= std_logic_vector(resize(unsigned(pixConvolved_3_fu_690_p2),64));
    tmp_25_0_2_fu_759_p1 <= std_logic_vector(resize(unsigned(col_assign_1_0_2_reg_1396),64));
    tmp_2_fu_1180_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(tmp_7_cast_fu_1173_p1));
    tmp_3_fu_574_p4 <= idxRow_phi_fu_486_p4(31 downto 1);
    tmp_4_fu_590_p4 <= col_assign_phi_fu_475_p4(31 downto 1);
    tmp_5_0_1_i_fu_836_p2 <= "1" when (unsigned(tmp_15_reg_1509) < unsigned(tmp_14_reg_1496)) else "0";
    tmp_5_0_2_i_fu_846_p2 <= "1" when (unsigned(tmp_16_reg_1522) < unsigned(valInWindow_0_minVal_1_0_1_i_fu_840_p3)) else "0";
    tmp_5_1_1_i_fu_934_p2 <= "1" when (unsigned(tmp_18_reg_1566) < unsigned(valInWindow_0_minVal_1_1_i_reg_1560)) else "0";
    tmp_5_1_2_i_fu_971_p2 <= "1" when (unsigned(tmp_19_reg_1591) < unsigned(valInWindow_0_minVal_1_1_1_i_reg_1585)) else "0";
    tmp_5_1_i_fu_897_p2 <= "1" when (unsigned(tmp_17_reg_1541) < unsigned(valInWindow_0_minVal_1_0_2_i_reg_1535)) else "0";
    tmp_5_2_1_i_fu_1059_p2 <= "1" when (unsigned(tmp_21_reg_1641) < unsigned(valInWindow_0_minVal_1_2_i_reg_1635)) else "0";
    tmp_5_2_2_i_fu_1120_p2 <= "1" when (unsigned(tmp_22_reg_1671) < unsigned(valInWindow_0_minVal_1_2_1_i_reg_1665)) else "0";
    tmp_5_2_i_fu_1013_p2 <= "1" when (unsigned(tmp_20_reg_1616) < unsigned(valInWindow_0_minVal_1_1_2_i_reg_1610)) else "0";
    tmp_7_cast_fu_1173_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_1163_p4),15));
    tmp_7_fu_683_p1 <= std_logic_vector(resize(unsigned(pixConvolved_phi_fu_497_p4),64));
    tmp_8_fu_1163_p4 <= p_neg_fu_1157_p2(16 downto 3);
    tmp_data_V_fu_1217_p3 <= 
        p_s_fu_1209_p3 when (ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1(0) = '1') else 
        sel_tmp10_reg_1700;
    tmp_s_fu_568_p1 <= std_logic_vector(resize(unsigned(col_assign_phi_fu_475_p4),64));
    valInWindow_0_maxVal_1_0_1_i_fu_866_p3 <= 
        tmp_15_reg_1509 when (tmp_11_0_1_i_fu_862_p2(0) = '1') else 
        tmp_14_reg_1496;
    valInWindow_0_maxVal_1_0_2_i_fu_877_p3 <= 
        tmp_16_reg_1522 when (tmp_11_0_2_i_fu_872_p2(0) = '1') else 
        valInWindow_0_maxVal_1_0_1_i_fu_866_p3;
    valInWindow_0_maxVal_1_1_1_i_fu_952_p3 <= 
        tmp_18_reg_1566 when (tmp_11_1_1_i_fu_948_p2(0) = '1') else 
        valInWindow_0_maxVal_1_1_i_reg_1574;
    valInWindow_0_maxVal_1_1_2_i_fu_989_p3 <= 
        tmp_19_reg_1591 when (tmp_11_1_2_i_fu_985_p2(0) = '1') else 
        valInWindow_0_maxVal_1_1_1_i_reg_1599;
    valInWindow_0_maxVal_1_1_i_fu_915_p3 <= 
        tmp_17_reg_1541 when (tmp_11_1_i_fu_911_p2(0) = '1') else 
        valInWindow_0_maxVal_1_0_2_i_reg_1549;
    valInWindow_0_maxVal_1_2_1_i_fu_1077_p3 <= 
        tmp_21_reg_1641 when (tmp_11_2_1_i_fu_1073_p2(0) = '1') else 
        valInWindow_0_maxVal_1_2_i_reg_1649;
    valInWindow_0_maxVal_1_2_2_i_fu_1134_p3 <= 
        tmp_22_reg_1671 when (tmp_11_2_2_i_fu_1130_p2(0) = '1') else 
        valInWindow_0_maxVal_1_2_1_i_reg_1679;
    valInWindow_0_maxVal_1_2_i_fu_1031_p3 <= 
        tmp_20_reg_1616 when (tmp_11_2_i_fu_1027_p2(0) = '1') else 
        valInWindow_0_maxVal_1_1_2_i_reg_1624;
    valInWindow_0_minVal_1_0_1_i_fu_840_p3 <= 
        tmp_15_reg_1509 when (tmp_5_0_1_i_fu_836_p2(0) = '1') else 
        tmp_14_reg_1496;
    valInWindow_0_minVal_1_0_2_i_fu_851_p3 <= 
        tmp_16_reg_1522 when (tmp_5_0_2_i_fu_846_p2(0) = '1') else 
        valInWindow_0_minVal_1_0_1_i_fu_840_p3;
    valInWindow_0_minVal_1_1_1_i_fu_938_p3 <= 
        tmp_18_reg_1566 when (tmp_5_1_1_i_fu_934_p2(0) = '1') else 
        valInWindow_0_minVal_1_1_i_reg_1560;
    valInWindow_0_minVal_1_1_2_i_fu_975_p3 <= 
        tmp_19_reg_1591 when (tmp_5_1_2_i_fu_971_p2(0) = '1') else 
        valInWindow_0_minVal_1_1_1_i_reg_1585;
    valInWindow_0_minVal_1_1_i_fu_901_p3 <= 
        tmp_17_reg_1541 when (tmp_5_1_i_fu_897_p2(0) = '1') else 
        valInWindow_0_minVal_1_0_2_i_reg_1535;
    valInWindow_0_minVal_1_2_1_i_fu_1063_p3 <= 
        tmp_21_reg_1641 when (tmp_5_2_1_i_fu_1059_p2(0) = '1') else 
        valInWindow_0_minVal_1_2_i_reg_1635;
    valInWindow_0_minVal_1_2_2_i_fu_1124_p3 <= 
        tmp_22_reg_1671 when (tmp_5_2_2_i_fu_1120_p2(0) = '1') else 
        valInWindow_0_minVal_1_2_1_i_reg_1665;
    valInWindow_0_minVal_1_2_i_fu_1017_p3 <= 
        tmp_20_reg_1616 when (tmp_5_2_i_fu_1013_p2(0) = '1') else 
        valInWindow_0_minVal_1_1_2_i_reg_1610;
    valOutput_1_fu_1190_p3 <= 
        tmp_2_fu_1180_p2 when (tmp_6_reg_1690(0) = '1') else 
        tmp_10_cast_fu_1186_p1;
    valOutput_fu_1097_p2 <= std_logic_vector(unsigned(tmp3_reg_1660) + unsigned(tmp7_fu_1092_p2));
    window_val_0_0_fu_773_p0 <= reg_527;
    window_val_0_0_fu_773_p1 <= window_val_0_0_fu_773_p10(8 - 1 downto 0);
    window_val_0_0_fu_773_p10 <= std_logic_vector(resize(unsigned(reg_535),16));
    window_val_0_0_fu_773_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_0_0_fu_773_p0) * signed('0' &window_val_0_0_fu_773_p1))), 16));
    window_val_0_1_fu_790_p0 <= reg_531;
    window_val_0_1_fu_790_p1 <= window_val_0_1_fu_790_p10(8 - 1 downto 0);
    window_val_0_1_fu_790_p10 <= std_logic_vector(resize(unsigned(lineBuff_val_0_load_1_reg_1441),16));
    window_val_0_1_fu_790_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_0_1_fu_790_p0) * signed('0' &window_val_0_1_fu_790_p1))), 16));
    window_val_0_2_fu_813_p0 <= reg_540;
    window_val_0_2_fu_813_p1 <= window_val_0_2_fu_813_p10(8 - 1 downto 0);
    window_val_0_2_fu_813_p10 <= std_logic_vector(resize(unsigned(reg_535),16));
    window_val_0_2_fu_813_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_0_2_fu_813_p0) * signed('0' &window_val_0_2_fu_813_p1))), 16));
    window_val_1_0_fu_830_p0 <= reg_527;
    window_val_1_0_fu_830_p1 <= window_val_1_0_fu_830_p10(8 - 1 downto 0);
    window_val_1_0_fu_830_p10 <= std_logic_vector(resize(unsigned(lineBuff_val_1_load_1_reg_1451),16));
    window_val_1_0_fu_830_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_1_0_fu_830_p0) * signed('0' &window_val_1_0_fu_830_p1))), 16));
    window_val_1_1_fu_891_p0 <= reg_531;
    window_val_1_1_fu_891_p1 <= window_val_1_1_fu_891_p10(8 - 1 downto 0);
    window_val_1_1_fu_891_p10 <= std_logic_vector(resize(unsigned(lineBuff_val_1_load_2_reg_1456),16));
    window_val_1_1_fu_891_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_1_1_fu_891_p0) * signed('0' &window_val_1_1_fu_891_p1))), 16));
    window_val_1_2_fu_928_p0 <= reg_540;
    window_val_1_2_fu_928_p1 <= window_val_1_2_fu_928_p10(8 - 1 downto 0);
    window_val_1_2_fu_928_p10 <= std_logic_vector(resize(unsigned(lineBuff_val_1_load_3_reg_1486),16));
    window_val_1_2_fu_928_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_1_2_fu_928_p0) * signed('0' &window_val_1_2_fu_928_p1))), 16));
    window_val_2_0_fu_965_p0 <= reg_527;
    window_val_2_0_fu_965_p1 <= window_val_2_0_fu_965_p10(8 - 1 downto 0);
    window_val_2_0_fu_965_p10 <= std_logic_vector(resize(unsigned(lineBuff_val_2_load_1_reg_1466),16));
    window_val_2_0_fu_965_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_2_0_fu_965_p0) * signed('0' &window_val_2_0_fu_965_p1))), 16));
    window_val_2_1_fu_1002_p0 <= reg_531;
    window_val_2_1_fu_1002_p1 <= window_val_2_1_fu_1002_p10(8 - 1 downto 0);
    window_val_2_1_fu_1002_p10 <= std_logic_vector(resize(unsigned(lineBuff_val_2_load_2_reg_1471),16));
    window_val_2_1_fu_1002_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_2_1_fu_1002_p0) * signed('0' &window_val_2_1_fu_1002_p1))), 16));
    window_val_2_2_fu_1044_p0 <= reg_540;
    window_val_2_2_fu_1044_p1 <= window_val_2_2_fu_1044_p10(8 - 1 downto 0);
    window_val_2_2_fu_1044_p10 <= std_logic_vector(resize(unsigned(lineBuff_val_2_load_3_reg_1491),16));
    window_val_2_2_fu_1044_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(window_val_2_2_fu_1044_p0) * signed('0' &window_val_2_2_fu_1044_p1))), 16));
end behav;
