-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity doHistStretch is
generic (
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    inStream_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CTRL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of doHistStretch is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "doHistStretch,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.133000,HLS_SYN_LAT=262177,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=1532,HLS_SYN_LUT=2319}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_pp0_stg0_fsm_7 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_st35_fsm_8 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_437F0000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011011111110000000000000000";
    constant ap_const_lv19_40000 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_26 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal xMin : STD_LOGIC_VECTOR (7 downto 0);
    signal xMax : STD_LOGIC_VECTOR (7 downto 0);
    signal inStream_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_7 : STD_LOGIC;
    signal ap_sig_59 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal exitcond_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal exitcond_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter25 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxPixel_reg_157 : STD_LOGIC_VECTOR (18 downto 0);
    signal xMax_read_reg_369 : STD_LOGIC_VECTOR (7 downto 0);
    signal xMin_read_reg_374 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast_fu_180_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_reg_379 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_177 : BOOLEAN;
    signal xMax_minus_xMin6_fu_192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_177_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xMax_minus_xMin_reg_389 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_188 : BOOLEAN;
    signal ap_sig_192 : BOOLEAN;
    signal ap_sig_ioackin_outStream_TREADY : STD_LOGIC;
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_394_pp0_iter24 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxPixel_1_fu_203_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_keep_V_reg_403 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter25 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_reg_408 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter25 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_413 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter6 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter7 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter8 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter9 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter10 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter11 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter12 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter13 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter14 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter15 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter16 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter17 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter18 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter19 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter20 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter21 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter22 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter23 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter24 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter25 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_last_V_reg_418 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter25 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_423 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter5 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter6 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter7 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter8 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter9 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter10 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter11 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter12 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter13 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter14 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter15 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter16 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter17 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter18 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter19 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter20 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter21 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter22 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter23 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter24 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter25 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_reg_428 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter5 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter7 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter8 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter9 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter10 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter11 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter12 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter13 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter14 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter15 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter16 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter17 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter18 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter19 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter20 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter21 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter22 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter23 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter24 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter25 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_438 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_173_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_reg_448 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_265_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_454 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ioackin_outStream_TREADY : STD_LOGIC := '0';
    signal grp_fu_177_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_6_fu_183_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_186_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_cast_fu_237_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_241_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_251_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_269_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_i_cast1_fu_280_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_283_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_i_i_fu_297_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_289_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_i_cast_fu_302_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_fu_306_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_cast_fu_314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_cast_cast_fu_318_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_i_i_fu_276_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_6_i_i_fu_322_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_7_i_i_fu_326_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_9_fu_338_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_i_fu_332_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_346_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_350_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_168_ce : STD_LOGIC;
    signal grp_fu_173_ce : STD_LOGIC;
    signal grp_fu_177_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st35_fsm_8 : STD_LOGIC;
    signal ap_sig_702 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component doHistStretch_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component doHistStretch_fdiv_32ns_32ns_32_16 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component doHistStretch_sitofp_32s_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component doHistStretch_CTRL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        xMin : OUT STD_LOGIC_VECTOR (7 downto 0);
        xMax : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    doHistStretch_CTRL_BUS_s_axi_U : component doHistStretch_CTRL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_BUS_AWVALID,
        AWREADY => s_axi_CTRL_BUS_AWREADY,
        AWADDR => s_axi_CTRL_BUS_AWADDR,
        WVALID => s_axi_CTRL_BUS_WVALID,
        WREADY => s_axi_CTRL_BUS_WREADY,
        WDATA => s_axi_CTRL_BUS_WDATA,
        WSTRB => s_axi_CTRL_BUS_WSTRB,
        ARVALID => s_axi_CTRL_BUS_ARVALID,
        ARREADY => s_axi_CTRL_BUS_ARREADY,
        ARADDR => s_axi_CTRL_BUS_ARADDR,
        RVALID => s_axi_CTRL_BUS_RVALID,
        RREADY => s_axi_CTRL_BUS_RREADY,
        RDATA => s_axi_CTRL_BUS_RDATA,
        RRESP => s_axi_CTRL_BUS_RRESP,
        BVALID => s_axi_CTRL_BUS_BVALID,
        BREADY => s_axi_CTRL_BUS_BREADY,
        BRESP => s_axi_CTRL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        xMin => xMin,
        xMax => xMax);

    doHistStretch_fmul_32ns_32ns_32_4_max_dsp_U1 : component doHistStretch_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_6_reg_443,
        din1 => ap_const_lv32_437F0000,
        ce => grp_fu_168_ce,
        dout => grp_fu_168_p2);

    doHistStretch_fdiv_32ns_32ns_32_16_U2 : component doHistStretch_fdiv_32ns_32ns_32_16
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_5_reg_438,
        din1 => xMax_minus_xMin_reg_389,
        ce => grp_fu_173_ce,
        dout => grp_fu_173_p2);

    doHistStretch_sitofp_32s_32_6_U3 : component doHistStretch_sitofp_32s_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_177_p0,
        ce => grp_fu_177_ce,
        dout => grp_fu_177_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_outStream_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))))) then 
                    ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192)) and (ap_const_logic_1 = outStream_TREADY)))) then 
                    ap_reg_ioackin_outStream_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and not((exitcond_fu_197_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (exitcond_fu_197_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and not((exitcond_fu_197_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                    ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    idxPixel_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_fu_197_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))))) then 
                idxPixel_reg_157 <= idxPixel_1_fu_203_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                idxPixel_reg_157 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))))) then
                ap_reg_ppstg_exitcond_reg_394_pp0_iter1 <= exitcond_reg_394;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter1 <= tmp_dest_V_reg_428;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter1 <= tmp_id_V_reg_423;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter1 <= tmp_keep_V_reg_403;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter1 <= tmp_last_V_reg_418;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter1 <= tmp_strb_V_reg_408;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter1 <= tmp_user_V_reg_413;
                exitcond_reg_394 <= exitcond_fu_197_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))) then
                ap_reg_ppstg_exitcond_reg_394_pp0_iter10 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter9;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter11 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter10;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter12 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter11;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter13 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter12;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter14 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter13;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter15 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter14;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter16 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter15;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter17 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter16;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter18 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter17;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter19 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter18;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter2 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter1;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter20 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter19;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter21 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter20;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter22 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter21;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter23 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter22;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter24 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter23;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter25 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter24;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter3 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter2;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter4 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter3;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter5 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter4;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter6 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter5;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter7 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter6;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter8 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter7;
                ap_reg_ppstg_exitcond_reg_394_pp0_iter9 <= ap_reg_ppstg_exitcond_reg_394_pp0_iter8;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter10 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter9;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter11 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter10;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter12 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter11;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter13 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter12;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter14 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter13;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter15 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter14;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter16 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter15;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter17 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter16;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter18 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter17;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter19 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter18;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter2 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter1;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter20 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter19;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter21 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter20;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter22 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter21;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter23 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter22;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter24 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter23;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter25 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter24;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter3 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter2;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter4 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter3;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter5 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter4;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter6 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter5;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter7 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter6;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter8 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter7;
                ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter9 <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter8;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter10 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter9;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter11 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter10;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter12 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter11;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter13 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter12;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter14 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter13;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter15 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter14;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter16 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter15;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter17 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter16;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter18 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter17;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter19 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter18;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter2 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter1;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter20 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter19;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter21 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter20;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter22 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter21;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter23 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter22;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter24 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter23;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter25 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter24;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter3 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter2;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter4 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter3;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter5 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter4;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter6 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter5;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter7 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter6;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter8 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter7;
                ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter9 <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter8;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter10 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter9;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter11 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter10;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter12 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter11;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter13 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter12;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter14 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter13;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter15 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter14;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter16 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter15;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter17 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter16;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter18 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter17;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter19 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter18;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter2 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter1;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter20 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter19;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter21 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter20;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter22 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter21;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter23 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter22;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter24 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter23;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter25 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter24;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter3 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter2;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter4 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter3;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter5 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter4;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter6 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter5;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter7 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter6;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter8 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter7;
                ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter9 <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter8;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter10 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter9;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter11 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter10;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter12 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter11;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter13 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter12;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter14 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter13;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter15 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter14;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter16 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter15;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter17 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter16;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter18 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter17;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter19 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter18;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter2 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter1;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter20 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter19;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter21 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter20;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter22 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter21;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter23 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter22;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter24 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter23;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter25 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter24;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter3 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter2;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter4 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter3;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter5 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter4;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter6 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter5;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter7 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter6;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter8 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter7;
                ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter9 <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter8;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter10 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter9;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter11 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter10;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter12 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter11;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter13 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter12;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter14 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter13;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter15 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter14;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter16 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter15;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter17 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter16;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter18 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter17;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter19 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter18;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter2 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter1;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter20 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter19;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter21 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter20;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter22 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter21;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter23 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter22;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter24 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter23;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter25 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter24;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter3 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter2;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter4 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter3;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter5 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter4;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter6 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter5;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter7 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter6;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter8 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter7;
                ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter9 <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter8;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter10 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter9;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter11 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter10;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter12 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter11;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter13 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter12;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter14 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter13;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter15 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter14;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter16 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter15;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter17 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter16;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter18 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter17;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter19 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter18;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter2 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter1;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter20 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter19;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter21 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter20;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter22 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter21;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter23 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter22;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter24 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter23;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter25 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter24;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter3 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter2;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter4 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter3;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter5 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter4;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter6 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter5;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter7 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter6;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter8 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter7;
                ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter9 <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter24))) then
                loc_V_1_reg_454 <= loc_V_1_fu_265_p1;
                loc_V_reg_448 <= p_Val2_s_fu_251_p1(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter4))) then
                tmp_5_reg_438 <= grp_fu_177_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter20))) then
                tmp_6_reg_443 <= grp_fu_173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    tmp_cast_reg_379(7 downto 0) <= tmp_cast_fu_180_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (exitcond_fu_197_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))))) then
                tmp_dest_V_reg_428 <= inStream_TDEST;
                tmp_id_V_reg_423 <= inStream_TID;
                tmp_keep_V_reg_403 <= inStream_TKEEP;
                tmp_last_V_reg_418 <= inStream_TLAST;
                tmp_strb_V_reg_408 <= inStream_TSTRB;
                tmp_user_V_reg_413 <= inStream_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                xMax_minus_xMin_reg_389 <= grp_fu_177_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                xMax_read_reg_369 <= xMax;
                xMin_read_reg_374 <= xMin;
            end if;
        end if;
    end process;
    tmp_cast_reg_379(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it25, ap_reg_ppiten_pp0_it26, exitcond_fu_197_p2, ap_reg_ppstg_exitcond_reg_394_pp0_iter25, ap_sig_192, ap_sig_ioackin_outStream_TREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_7;
            when ap_ST_pp0_stg0_fsm_7 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it25)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and not((exitcond_fu_197_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_7;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it25))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) and not((exitcond_fu_197_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st35_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_7;
                end if;
            when ap_ST_st35_fsm_8 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st35_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st35_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_177_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_177 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_188_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_188 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_192_assign_proc : process(inStream_TVALID, exitcond_fu_197_p2)
    begin
                ap_sig_192 <= ((exitcond_fu_197_p2 = ap_const_lv1_0) and (inStream_TVALID = ap_const_logic_0));
    end process;


    ap_sig_26_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_26 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_59_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_59 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_702_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_702 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_7_assign_proc : process(ap_sig_59)
    begin
        if (ap_sig_59) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_26)
    begin
        if (ap_sig_26) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_177)
    begin
        if (ap_sig_177) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st35_fsm_8_assign_proc : process(ap_sig_702)
    begin
        if (ap_sig_702) then 
            ap_sig_cseq_ST_st35_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st35_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_188)
    begin
        if (ap_sig_188) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_outStream_TREADY_assign_proc : process(outStream_TREADY, ap_reg_ioackin_outStream_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)) then 
            ap_sig_ioackin_outStream_TREADY <= outStream_TREADY;
        else 
            ap_sig_ioackin_outStream_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond_fu_197_p2 <= "1" when (idxPixel_reg_157 = ap_const_lv19_40000) else "0";

    grp_fu_168_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_7, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it26, ap_reg_ppstg_exitcond_reg_394_pp0_iter25, ap_sig_192, ap_sig_ioackin_outStream_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))))) then 
            grp_fu_168_ce <= ap_const_logic_1;
        else 
            grp_fu_168_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_173_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_7, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it26, ap_reg_ppstg_exitcond_reg_394_pp0_iter25, ap_sig_192, ap_sig_ioackin_outStream_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))))) then 
            grp_fu_173_ce <= ap_const_logic_1;
        else 
            grp_fu_173_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_177_ce_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_pp0_stg0_fsm_7, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it26, ap_reg_ppstg_exitcond_reg_394_pp0_iter25, ap_sig_192, ap_sig_ioackin_outStream_TREADY, ap_sig_cseq_ST_st35_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY)))) or (ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_8))) then 
            grp_fu_177_ce <= ap_const_logic_0;
        else 
            grp_fu_177_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_177_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_7, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_st2_fsm_1, xMax_minus_xMin6_fu_192_p1, tmp_s_fu_246_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_177_p0 <= tmp_s_fu_246_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            grp_fu_177_p0 <= xMax_minus_xMin6_fu_192_p1;
        else 
            grp_fu_177_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    idxPixel_1_fu_203_p2 <= std_logic_vector(unsigned(idxPixel_reg_157) + unsigned(ap_const_lv19_1));

    inStream_TDATA_blk_n_assign_proc : process(inStream_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_7, ap_reg_ppiten_pp0_it0, exitcond_fu_197_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_fu_197_p2 = ap_const_lv1_0))) then 
            inStream_TDATA_blk_n <= inStream_TVALID;
        else 
            inStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inStream_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_7, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it26, exitcond_fu_197_p2, ap_reg_ppstg_exitcond_reg_394_pp0_iter25, ap_sig_192, ap_sig_ioackin_outStream_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_fu_197_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY))))))) then 
            inStream_TREADY <= ap_const_logic_1;
        else 
            inStream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_fu_289_p3 <= sh_assign_fu_283_p2(8 downto 8);
    loc_V_1_fu_265_p1 <= p_Val2_s_fu_251_p1(23 - 1 downto 0);
    outStream_TDATA <= 
        tmp_fu_346_p1 when (isNeg_fu_289_p3(0) = '1') else 
        tmp_3_fu_350_p4;

    outStream_TDATA_blk_n_assign_proc : process(outStream_TREADY, ap_reg_ppiten_pp0_it26, ap_reg_ppstg_exitcond_reg_394_pp0_iter25)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25))) then 
            outStream_TDATA_blk_n <= outStream_TREADY;
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_TDEST <= ap_reg_ppstg_tmp_dest_V_reg_428_pp0_iter25;
    outStream_TID <= ap_reg_ppstg_tmp_id_V_reg_423_pp0_iter25;
    outStream_TKEEP <= ap_reg_ppstg_tmp_keep_V_reg_403_pp0_iter25;
    outStream_TLAST <= ap_reg_ppstg_tmp_last_V_reg_418_pp0_iter25;
    outStream_TSTRB <= ap_reg_ppstg_tmp_strb_V_reg_408_pp0_iter25;
    outStream_TUSER <= ap_reg_ppstg_tmp_user_V_reg_413_pp0_iter25;

    outStream_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it26, ap_reg_ppstg_exitcond_reg_394_pp0_iter25, ap_sig_192, ap_reg_ioackin_outStream_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_394_pp0_iter25) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_192)) and (ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)))) then 
            outStream_TVALID <= ap_const_logic_1;
        else 
            outStream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_269_p3 <= (ap_const_lv1_1 & loc_V_1_reg_454);
    p_Val2_s_fu_251_p1 <= grp_fu_168_p2;
        sh_assign_1_cast_cast_fu_318_p1 <= std_logic_vector(resize(signed(sh_assign_1_fu_306_p3),24));

        sh_assign_1_cast_fu_314_p1 <= std_logic_vector(resize(signed(sh_assign_1_fu_306_p3),32));

    sh_assign_1_fu_306_p3 <= 
        tmp_4_i_i_cast_fu_302_p1 when (isNeg_fu_289_p3(0) = '1') else 
        sh_assign_fu_283_p2;
    sh_assign_fu_283_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_cast1_fu_280_p1));
    tmp_1_fu_186_p2 <= std_logic_vector(unsigned(tmp_cast_6_fu_183_p1) - unsigned(tmp_cast_fu_180_p1));
    tmp_2_i_i_fu_276_p1 <= std_logic_vector(resize(unsigned(p_Result_s_fu_269_p3),54));
    tmp_3_cast_fu_237_p1 <= std_logic_vector(resize(unsigned(inStream_TDATA),9));
    tmp_3_fu_350_p4 <= tmp_9_i_i_fu_332_p2(30 downto 23);
    tmp_4_fu_241_p2 <= std_logic_vector(unsigned(tmp_3_cast_fu_237_p1) - unsigned(tmp_cast_reg_379));
        tmp_4_i_i_cast_fu_302_p1 <= std_logic_vector(resize(signed(tmp_4_i_i_fu_297_p2),9));

    tmp_4_i_i_fu_297_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_reg_448));
    tmp_6_i_i_fu_322_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_cast_fu_314_p1),54));
    tmp_7_i_i_fu_326_p2 <= std_logic_vector(shift_right(unsigned(p_Result_s_fu_269_p3),to_integer(unsigned('0' & sh_assign_1_cast_cast_fu_318_p1(24-1 downto 0)))));
    tmp_9_fu_338_p3 <= tmp_7_i_i_fu_326_p2(23 downto 23);
    tmp_9_i_i_fu_332_p2 <= std_logic_vector(shift_left(unsigned(tmp_2_i_i_fu_276_p1),to_integer(unsigned('0' & tmp_6_i_i_fu_322_p1(31-1 downto 0)))));
    tmp_cast_6_fu_183_p1 <= std_logic_vector(resize(unsigned(xMax_read_reg_369),9));
    tmp_cast_fu_180_p1 <= std_logic_vector(resize(unsigned(xMin_read_reg_374),9));
    tmp_fu_346_p1 <= std_logic_vector(resize(unsigned(tmp_9_fu_338_p3),8));
    tmp_i_i_i_cast1_fu_280_p1 <= std_logic_vector(resize(unsigned(loc_V_reg_448),9));
        tmp_s_fu_246_p1 <= std_logic_vector(resize(signed(tmp_4_fu_241_p2),32));

        xMax_minus_xMin6_fu_192_p1 <= std_logic_vector(resize(signed(tmp_1_fu_186_p2),32));

end behav;
