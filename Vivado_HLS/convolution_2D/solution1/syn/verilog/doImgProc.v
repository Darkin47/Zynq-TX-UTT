// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="doImgProc,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.340000,HLS_SYN_LAT=2359816,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=9,HLS_SYN_FF=1034,HLS_SYN_LUT=1363}" *)

module doImgProc (
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt,
        s_axi_KERNEL_BUS_AWVALID,
        s_axi_KERNEL_BUS_AWREADY,
        s_axi_KERNEL_BUS_AWADDR,
        s_axi_KERNEL_BUS_WVALID,
        s_axi_KERNEL_BUS_WREADY,
        s_axi_KERNEL_BUS_WDATA,
        s_axi_KERNEL_BUS_WSTRB,
        s_axi_KERNEL_BUS_ARVALID,
        s_axi_KERNEL_BUS_ARREADY,
        s_axi_KERNEL_BUS_ARADDR,
        s_axi_KERNEL_BUS_RVALID,
        s_axi_KERNEL_BUS_RREADY,
        s_axi_KERNEL_BUS_RDATA,
        s_axi_KERNEL_BUS_RRESP,
        s_axi_KERNEL_BUS_BVALID,
        s_axi_KERNEL_BUS_BREADY,
        s_axi_KERNEL_BUS_BRESP
);

parameter    ap_ST_st1_fsm_0 = 11'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 11'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 11'b100;
parameter    ap_ST_pp0_stg2_fsm_3 = 11'b1000;
parameter    ap_ST_pp0_stg3_fsm_4 = 11'b10000;
parameter    ap_ST_pp0_stg4_fsm_5 = 11'b100000;
parameter    ap_ST_pp0_stg5_fsm_6 = 11'b1000000;
parameter    ap_ST_pp0_stg6_fsm_7 = 11'b10000000;
parameter    ap_ST_pp0_stg7_fsm_8 = 11'b100000000;
parameter    ap_ST_pp0_stg8_fsm_9 = 11'b1000000000;
parameter    ap_ST_st17_fsm_10 = 11'b10000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_KERNEL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_KERNEL_BUS_ADDR_WIDTH = 5;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv19_1 = 19'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv19_40001 = 19'b1000000000000000001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_1FF = 32'b111111111;
parameter    ap_const_lv19_201 = 19'b1000000001;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv10_201 = 10'b1000000001;
parameter    ap_const_lv10_1 = 10'b1;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (C_S_AXI_CRTL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_KERNEL_BUS_WSTRB_WIDTH = (C_S_AXI_KERNEL_BUS_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [7:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [0:0] inStream_TKEEP;
input  [0:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [7:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [0:0] outStream_TKEEP;
output  [0:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;
input   s_axi_KERNEL_BUS_AWVALID;
output   s_axi_KERNEL_BUS_AWREADY;
input  [C_S_AXI_KERNEL_BUS_ADDR_WIDTH - 1 : 0] s_axi_KERNEL_BUS_AWADDR;
input   s_axi_KERNEL_BUS_WVALID;
output   s_axi_KERNEL_BUS_WREADY;
input  [C_S_AXI_KERNEL_BUS_DATA_WIDTH - 1 : 0] s_axi_KERNEL_BUS_WDATA;
input  [C_S_AXI_KERNEL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_KERNEL_BUS_WSTRB;
input   s_axi_KERNEL_BUS_ARVALID;
output   s_axi_KERNEL_BUS_ARREADY;
input  [C_S_AXI_KERNEL_BUS_ADDR_WIDTH - 1 : 0] s_axi_KERNEL_BUS_ARADDR;
output   s_axi_KERNEL_BUS_RVALID;
input   s_axi_KERNEL_BUS_RREADY;
output  [C_S_AXI_KERNEL_BUS_DATA_WIDTH - 1 : 0] s_axi_KERNEL_BUS_RDATA;
output  [1:0] s_axi_KERNEL_BUS_RRESP;
output   s_axi_KERNEL_BUS_BVALID;
input   s_axi_KERNEL_BUS_BREADY;
output  [1:0] s_axi_KERNEL_BUS_BRESP;

reg inStream_TREADY;
reg[7:0] outStream_TDATA;
reg outStream_TVALID;
reg[0:0] outStream_TKEEP;
reg[0:0] outStream_TSTRB;
reg[1:0] outStream_TUSER;
reg[0:0] outStream_TLAST;
reg[4:0] outStream_TID;
reg[5:0] outStream_TDEST;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_28;
reg    ap_ready;
reg   [3:0] kernel_address0;
reg    kernel_ce0;
wire   [7:0] kernel_q0;
wire   [31:0] operation;
reg    inStream_TDATA_blk_n;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_65;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg   [0:0] exitcond1_reg_1305;
reg    outStream_TDATA_blk_n;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_6;
reg    ap_sig_82;
reg   [0:0] tmp_12_reg_1347;
reg   [0:0] ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1;
reg    ap_sig_cseq_ST_st17_fsm_10;
reg    ap_sig_95;
wire   [0:0] exitcond_fu_1224_p2;
reg   [4:0] tmp_id_V_reg_406;
reg   [1:0] tmp_user_V_reg_419;
reg   [0:0] tmp_strb_V_reg_432;
reg   [0:0] tmp_keep_V_reg_445;
reg   [5:0] tmp_dest_V_reg_458;
reg   [31:0] col_assign_reg_471;
reg   [31:0] idxRow_reg_482;
reg   [31:0] pixConvolved_reg_493;
reg   [18:0] countWait_reg_505;
reg   [7:0] reg_527;
reg    ap_sig_188;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_5;
reg    ap_sig_198;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_8;
reg    ap_sig_208;
reg   [7:0] reg_531;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_3;
reg    ap_sig_219;
reg    ap_sig_ioackin_outStream_TREADY;
reg    ap_sig_cseq_ST_pp0_stg8_fsm_9;
reg    ap_sig_237;
wire   [7:0] lineBuff_val_0_q0;
reg   [7:0] reg_535;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_4;
reg    ap_sig_249;
wire   [7:0] lineBuff_val_0_q1;
reg   [7:0] reg_540;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_7;
reg    ap_sig_260;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_270;
wire   [0:0] sel_tmp2_fu_544_p2;
reg   [0:0] sel_tmp2_reg_1290;
wire   [0:0] sel_tmp5_fu_550_p2;
reg   [0:0] sel_tmp5_reg_1295;
wire   [0:0] sel_tmp8_fu_556_p2;
reg   [0:0] sel_tmp8_reg_1300;
wire   [0:0] exitcond1_fu_562_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1;
wire   [63:0] tmp_s_fu_568_p1;
reg   [63:0] tmp_s_reg_1309;
reg   [8:0] lineBuff_val_1_addr_reg_1314;
reg   [8:0] lineBuff_val_2_addr_reg_1319;
wire   [0:0] or_cond_fu_606_p2;
reg   [0:0] or_cond_reg_1324;
wire   [0:0] tmp_11_fu_612_p2;
reg   [0:0] tmp_11_reg_1332;
wire   [31:0] idxCol_1_fu_630_p3;
reg   [31:0] idxCol_1_reg_1337;
wire   [31:0] idxRow_1_fu_638_p3;
reg   [31:0] idxRow_1_reg_1342;
wire   [0:0] tmp_12_fu_646_p2;
wire   [18:0] phitmp_fu_652_p2;
reg   [18:0] phitmp_reg_1351;
reg   [0:0] tmp_keep_V_1_reg_1356;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1;
reg   [0:0] tmp_strb_V_1_reg_1362;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1;
reg   [1:0] tmp_user_V_1_reg_1368;
reg   [1:0] ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1;
reg   [4:0] tmp_id_V_1_reg_1374;
reg   [4:0] ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1;
reg   [5:0] tmp_dest_V_1_reg_1380;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1;
wire   [31:0] col_assign_1_0_2_fu_703_p2;
reg   [31:0] col_assign_1_0_2_reg_1396;
wire   [0:0] sel_tmp3_fu_716_p2;
reg   [0:0] sel_tmp3_reg_1421;
reg   [0:0] ap_reg_ppstg_sel_tmp3_reg_1421_pp0_iter1;
wire   [0:0] sel_tmp6_fu_728_p2;
reg   [0:0] sel_tmp6_reg_1426;
reg   [0:0] ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1;
wire   [0:0] sel_tmp9_fu_740_p2;
reg   [0:0] sel_tmp9_reg_1431;
reg   [0:0] ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1;
wire   [31:0] pixConvolved_2_fu_752_p3;
reg   [31:0] pixConvolved_2_reg_1436;
reg   [7:0] lineBuff_val_0_load_1_reg_1441;
wire   [7:0] lineBuff_val_1_q0;
reg   [7:0] lineBuff_val_1_load_1_reg_1451;
wire   [7:0] lineBuff_val_1_q1;
reg   [7:0] lineBuff_val_1_load_2_reg_1456;
wire   [7:0] lineBuff_val_2_q0;
reg   [7:0] lineBuff_val_2_load_1_reg_1466;
wire   [7:0] lineBuff_val_2_q1;
reg   [7:0] lineBuff_val_2_load_2_reg_1471;
wire   [15:0] window_val_0_0_fu_773_p2;
reg   [15:0] window_val_0_0_reg_1481;
reg   [7:0] lineBuff_val_1_load_3_reg_1486;
reg   [7:0] lineBuff_val_2_load_3_reg_1491;
wire   [7:0] tmp_14_fu_779_p1;
reg   [7:0] tmp_14_reg_1496;
wire   [15:0] tmp4_fu_796_p2;
reg   [15:0] tmp4_reg_1504;
wire   [7:0] tmp_15_fu_801_p1;
reg   [7:0] tmp_15_reg_1509;
wire   [15:0] window_val_0_2_fu_813_p2;
reg   [15:0] window_val_0_2_reg_1517;
wire   [7:0] tmp_16_fu_819_p1;
reg   [7:0] tmp_16_reg_1522;
wire   [15:0] window_val_1_0_fu_830_p2;
reg   [15:0] window_val_1_0_reg_1530;
wire   [7:0] valInWindow_0_minVal_1_0_2_i_fu_851_p3;
reg   [7:0] valInWindow_0_minVal_1_0_2_i_reg_1535;
wire   [7:0] tmp_17_fu_858_p1;
reg   [7:0] tmp_17_reg_1541;
wire   [7:0] valInWindow_0_maxVal_1_0_2_i_fu_877_p3;
reg   [7:0] valInWindow_0_maxVal_1_0_2_i_reg_1549;
wire   [15:0] window_val_1_1_fu_891_p2;
reg   [15:0] window_val_1_1_reg_1555;
wire   [7:0] valInWindow_0_minVal_1_1_i_fu_901_p3;
reg   [7:0] valInWindow_0_minVal_1_1_i_reg_1560;
wire   [7:0] tmp_18_fu_907_p1;
reg   [7:0] tmp_18_reg_1566;
wire   [7:0] valInWindow_0_maxVal_1_1_i_fu_915_p3;
reg   [7:0] valInWindow_0_maxVal_1_1_i_reg_1574;
wire   [15:0] window_val_1_2_fu_928_p2;
reg   [15:0] window_val_1_2_reg_1580;
wire   [7:0] valInWindow_0_minVal_1_1_1_i_fu_938_p3;
reg   [7:0] valInWindow_0_minVal_1_1_1_i_reg_1585;
wire   [7:0] tmp_19_fu_944_p1;
reg   [7:0] tmp_19_reg_1591;
wire   [7:0] valInWindow_0_maxVal_1_1_1_i_fu_952_p3;
reg   [7:0] valInWindow_0_maxVal_1_1_1_i_reg_1599;
wire   [15:0] window_val_2_0_fu_965_p2;
reg   [15:0] window_val_2_0_reg_1605;
wire   [7:0] valInWindow_0_minVal_1_1_2_i_fu_975_p3;
reg   [7:0] valInWindow_0_minVal_1_1_2_i_reg_1610;
wire   [7:0] tmp_20_fu_981_p1;
reg   [7:0] tmp_20_reg_1616;
wire   [7:0] valInWindow_0_maxVal_1_1_2_i_fu_989_p3;
reg   [7:0] valInWindow_0_maxVal_1_1_2_i_reg_1624;
wire   [15:0] tmp1_fu_1008_p2;
reg   [15:0] tmp1_reg_1630;
wire   [7:0] valInWindow_0_minVal_1_2_i_fu_1017_p3;
reg   [7:0] valInWindow_0_minVal_1_2_i_reg_1635;
wire   [7:0] tmp_21_fu_1023_p1;
reg   [7:0] tmp_21_reg_1641;
wire   [7:0] valInWindow_0_maxVal_1_2_i_fu_1031_p3;
reg   [7:0] valInWindow_0_maxVal_1_2_i_reg_1649;
wire   [15:0] window_val_2_2_fu_1044_p2;
reg   [15:0] window_val_2_2_reg_1655;
wire   [15:0] tmp3_fu_1054_p2;
reg   [15:0] tmp3_reg_1660;
wire   [7:0] valInWindow_0_minVal_1_2_1_i_fu_1063_p3;
reg   [7:0] valInWindow_0_minVal_1_2_1_i_reg_1665;
wire   [7:0] tmp_22_fu_1069_p1;
reg   [7:0] tmp_22_reg_1671;
wire   [7:0] valInWindow_0_maxVal_1_2_1_i_fu_1077_p3;
reg   [7:0] valInWindow_0_maxVal_1_2_1_i_reg_1679;
wire   [15:0] valOutput_fu_1097_p2;
reg   [15:0] valOutput_reg_1685;
reg   [0:0] tmp_6_reg_1690;
reg   [12:0] tmp_9_reg_1695;
wire   [7:0] sel_tmp10_fu_1147_p3;
reg   [7:0] sel_tmp10_reg_1700;
wire   [9:0] countWait_2_fu_1230_p2;
reg   [8:0] lineBuff_val_0_address0;
reg    lineBuff_val_0_ce0;
reg    lineBuff_val_0_we0;
reg   [8:0] lineBuff_val_0_address1;
reg    lineBuff_val_0_ce1;
reg   [8:0] lineBuff_val_1_address0;
reg    lineBuff_val_1_ce0;
reg    lineBuff_val_1_we0;
reg   [8:0] lineBuff_val_1_address1;
reg    lineBuff_val_1_ce1;
reg   [8:0] lineBuff_val_2_address0;
reg    lineBuff_val_2_ce0;
reg    lineBuff_val_2_we0;
reg   [8:0] lineBuff_val_2_address1;
reg    lineBuff_val_2_ce1;
reg   [31:0] col_assign_phi_fu_475_p4;
reg   [31:0] idxRow_phi_fu_486_p4;
reg   [31:0] pixConvolved_phi_fu_497_p4;
reg   [18:0] countWait_phi_fu_509_p4;
reg   [9:0] countWait_1_reg_516;
wire   [63:0] tmp_7_fu_683_p1;
wire   [63:0] tmp_25_0_1_fu_696_p1;
wire   [63:0] tmp_25_0_2_fu_759_p1;
wire   [7:0] tmp_data_V_fu_1217_p3;
reg    ap_reg_ioackin_outStream_TREADY;
wire   [30:0] tmp_3_fu_574_p4;
wire   [30:0] tmp_4_fu_590_p4;
wire   [0:0] icmp_fu_584_p2;
wire   [0:0] icmp4_fu_600_p2;
wire   [31:0] idxCol_fu_618_p2;
wire   [31:0] idxRow_2_fu_624_p2;
wire   [31:0] pixConvolved_3_fu_690_p2;
wire   [31:0] sel_tmp1_fu_709_p3;
wire   [31:0] sel_tmp4_fu_720_p3;
wire   [31:0] sel_tmp7_fu_732_p3;
wire   [31:0] pixConvolved_1_fu_744_p3;
wire  signed [7:0] window_val_0_0_fu_773_p0;
wire   [7:0] window_val_0_0_fu_773_p1;
wire  signed [7:0] window_val_0_1_fu_790_p0;
wire   [7:0] window_val_0_1_fu_790_p1;
wire   [15:0] window_val_0_1_fu_790_p2;
wire  signed [7:0] window_val_0_2_fu_813_p0;
wire   [7:0] window_val_0_2_fu_813_p1;
wire  signed [7:0] window_val_1_0_fu_830_p0;
wire   [7:0] window_val_1_0_fu_830_p1;
wire   [0:0] tmp_5_0_1_i_fu_836_p2;
wire   [7:0] valInWindow_0_minVal_1_0_1_i_fu_840_p3;
wire   [0:0] tmp_5_0_2_i_fu_846_p2;
wire   [0:0] tmp_11_0_1_i_fu_862_p2;
wire   [7:0] valInWindow_0_maxVal_1_0_1_i_fu_866_p3;
wire   [0:0] tmp_11_0_2_i_fu_872_p2;
wire  signed [7:0] window_val_1_1_fu_891_p0;
wire   [7:0] window_val_1_1_fu_891_p1;
wire   [0:0] tmp_5_1_i_fu_897_p2;
wire   [0:0] tmp_11_1_i_fu_911_p2;
wire  signed [7:0] window_val_1_2_fu_928_p0;
wire   [7:0] window_val_1_2_fu_928_p1;
wire   [0:0] tmp_5_1_1_i_fu_934_p2;
wire   [0:0] tmp_11_1_1_i_fu_948_p2;
wire  signed [7:0] window_val_2_0_fu_965_p0;
wire   [7:0] window_val_2_0_fu_965_p1;
wire   [0:0] tmp_5_1_2_i_fu_971_p2;
wire   [0:0] tmp_11_1_2_i_fu_985_p2;
wire  signed [7:0] window_val_2_1_fu_1002_p0;
wire   [7:0] window_val_2_1_fu_1002_p1;
wire   [15:0] window_val_2_1_fu_1002_p2;
wire   [0:0] tmp_5_2_i_fu_1013_p2;
wire   [0:0] tmp_11_2_i_fu_1027_p2;
wire  signed [7:0] window_val_2_2_fu_1044_p0;
wire   [7:0] window_val_2_2_fu_1044_p1;
wire   [15:0] tmp2_fu_1050_p2;
wire   [0:0] tmp_5_2_1_i_fu_1059_p2;
wire   [0:0] tmp_11_2_1_i_fu_1073_p2;
wire   [15:0] tmp5_fu_1083_p2;
wire   [15:0] tmp6_fu_1087_p2;
wire   [15:0] tmp7_fu_1092_p2;
wire   [0:0] tmp_5_2_2_i_fu_1120_p2;
wire   [0:0] tmp_11_2_2_i_fu_1130_p2;
wire   [7:0] valInWindow_0_maxVal_1_2_2_i_fu_1134_p3;
wire   [7:0] valInWindow_0_minVal_1_2_2_i_fu_1124_p3;
wire   [7:0] sel_tmp_fu_1140_p3;
wire  signed [16:0] tmp_18_tr_fu_1154_p1;
wire   [16:0] p_neg_fu_1157_p2;
wire   [13:0] tmp_8_fu_1163_p4;
wire   [14:0] tmp_7_cast_fu_1173_p1;
wire  signed [13:0] tmp_1_fu_1177_p1;
wire   [14:0] tmp_2_fu_1180_p2;
wire   [14:0] tmp_10_cast_fu_1186_p1;
wire   [14:0] valOutput_1_fu_1190_p3;
wire   [0:0] tmp_13_fu_1201_p3;
wire   [7:0] tmp_10_fu_1197_p1;
wire   [7:0] p_s_fu_1209_p3;
reg   [10:0] ap_NS_fsm;
wire   [15:0] window_val_0_0_fu_773_p10;
wire   [15:0] window_val_0_1_fu_790_p10;
wire   [15:0] window_val_0_2_fu_813_p10;
wire   [15:0] window_val_1_0_fu_830_p10;
wire   [15:0] window_val_1_1_fu_891_p10;
wire   [15:0] window_val_1_2_fu_928_p10;
wire   [15:0] window_val_2_0_fu_965_p10;
wire   [15:0] window_val_2_1_fu_1002_p10;
wire   [15:0] window_val_2_2_fu_1044_p10;
reg    ap_sig_1220;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ioackin_outStream_TREADY = 1'b0;
end

doImgProc_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
doImgProc_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .operation(operation)
);

doImgProc_KERNEL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_KERNEL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_KERNEL_BUS_DATA_WIDTH ))
doImgProc_KERNEL_BUS_s_axi_U(
    .AWVALID(s_axi_KERNEL_BUS_AWVALID),
    .AWREADY(s_axi_KERNEL_BUS_AWREADY),
    .AWADDR(s_axi_KERNEL_BUS_AWADDR),
    .WVALID(s_axi_KERNEL_BUS_WVALID),
    .WREADY(s_axi_KERNEL_BUS_WREADY),
    .WDATA(s_axi_KERNEL_BUS_WDATA),
    .WSTRB(s_axi_KERNEL_BUS_WSTRB),
    .ARVALID(s_axi_KERNEL_BUS_ARVALID),
    .ARREADY(s_axi_KERNEL_BUS_ARREADY),
    .ARADDR(s_axi_KERNEL_BUS_ARADDR),
    .RVALID(s_axi_KERNEL_BUS_RVALID),
    .RREADY(s_axi_KERNEL_BUS_RREADY),
    .RDATA(s_axi_KERNEL_BUS_RDATA),
    .RRESP(s_axi_KERNEL_BUS_RRESP),
    .BVALID(s_axi_KERNEL_BUS_BVALID),
    .BREADY(s_axi_KERNEL_BUS_BREADY),
    .BRESP(s_axi_KERNEL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .kernel_address0(kernel_address0),
    .kernel_ce0(kernel_ce0),
    .kernel_q0(kernel_q0)
);

doImgProc_lineBuff_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
lineBuff_val_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuff_val_0_address0),
    .ce0(lineBuff_val_0_ce0),
    .we0(lineBuff_val_0_we0),
    .d0(lineBuff_val_1_q0),
    .q0(lineBuff_val_0_q0),
    .address1(lineBuff_val_0_address1),
    .ce1(lineBuff_val_0_ce1),
    .q1(lineBuff_val_0_q1)
);

doImgProc_lineBuff_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
lineBuff_val_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuff_val_1_address0),
    .ce0(lineBuff_val_1_ce0),
    .we0(lineBuff_val_1_we0),
    .d0(lineBuff_val_2_q0),
    .q0(lineBuff_val_1_q0),
    .address1(lineBuff_val_1_address1),
    .ce1(lineBuff_val_1_ce1),
    .q1(lineBuff_val_1_q1)
);

doImgProc_lineBuff_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
lineBuff_val_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuff_val_2_address0),
    .ce0(lineBuff_val_2_ce0),
    .we0(lineBuff_val_2_we0),
    .d0(inStream_TDATA),
    .q0(lineBuff_val_2_q0),
    .address1(lineBuff_val_2_address1),
    .ce1(lineBuff_val_2_ce1),
    .q1(lineBuff_val_2_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_outStream_TREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2) & ~((1'b0 == exitcond_fu_1224_p2) & (1'b0 == ap_sig_ioackin_outStream_TREADY))) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY))))) begin
            ap_reg_ioackin_outStream_TREADY <= 1'b0;
        end else if ((((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b1 == outStream_TREADY)) | ((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2) & (1'b1 == outStream_TREADY)))) begin
            ap_reg_ioackin_outStream_TREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(1'b0 == exitcond1_fu_562_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & ~(exitcond1_reg_1305 == 1'b0)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        col_assign_reg_471 <= idxCol_1_reg_1337;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        col_assign_reg_471 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(1'b0 == exitcond1_fu_562_p2))) begin
        countWait_1_reg_516 <= ap_const_lv10_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2) & ~((1'b0 == exitcond_fu_1224_p2) & (1'b0 == ap_sig_ioackin_outStream_TREADY)))) begin
        countWait_1_reg_516 <= countWait_2_fu_1230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        countWait_reg_505 <= phitmp_reg_1351;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        countWait_reg_505 <= ap_const_lv19_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        idxRow_reg_482 <= idxRow_1_reg_1342;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        idxRow_reg_482 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        pixConvolved_reg_493 <= pixConvolved_2_reg_1436;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        pixConvolved_reg_493 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (ap_sig_1220) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) begin
            reg_535 <= lineBuff_val_0_q1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            reg_535 <= lineBuff_val_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1 <= exitcond1_reg_1305;
        ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1 <= tmp_12_reg_1347;
        exitcond1_reg_1305 <= exitcond1_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
        ap_reg_ppstg_sel_tmp3_reg_1421_pp0_iter1 <= sel_tmp3_reg_1421;
        ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1 <= sel_tmp6_reg_1426;
        ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1 <= sel_tmp9_reg_1431;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188))) begin
        ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1 <= tmp_dest_V_1_reg_1380;
        ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1 <= tmp_id_V_1_reg_1374;
        ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1 <= tmp_keep_V_1_reg_1356;
        ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1 <= tmp_strb_V_1_reg_1362;
        ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1 <= tmp_user_V_1_reg_1368;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        col_assign_1_0_2_reg_1396 <= col_assign_1_0_2_fu_703_p2;
        sel_tmp3_reg_1421 <= sel_tmp3_fu_716_p2;
        sel_tmp6_reg_1426 <= sel_tmp6_fu_728_p2;
        sel_tmp9_reg_1431 <= sel_tmp9_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b0 == exitcond1_fu_562_p2))) begin
        idxCol_1_reg_1337 <= idxCol_1_fu_630_p3;
        idxRow_1_reg_1342 <= idxRow_1_fu_638_p3;
        phitmp_reg_1351 <= phitmp_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        lineBuff_val_0_load_1_reg_1441 <= lineBuff_val_0_q1;
        lineBuff_val_1_load_1_reg_1451 <= lineBuff_val_1_q0;
        lineBuff_val_1_load_2_reg_1456 <= lineBuff_val_1_q1;
        lineBuff_val_2_load_1_reg_1466 <= lineBuff_val_2_q0;
        lineBuff_val_2_load_2_reg_1471 <= lineBuff_val_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b0 == exitcond1_fu_562_p2))) begin
        lineBuff_val_1_addr_reg_1314 <= tmp_s_fu_568_p1;
        lineBuff_val_2_addr_reg_1319 <= tmp_s_fu_568_p1;
        or_cond_reg_1324 <= or_cond_fu_606_p2;
        tmp_11_reg_1332 <= tmp_11_fu_612_p2;
        tmp_12_reg_1347 <= tmp_12_fu_646_p2;
        tmp_s_reg_1309[31 : 0] <= tmp_s_fu_568_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5))) begin
        lineBuff_val_1_load_3_reg_1486 <= lineBuff_val_1_q1;
        lineBuff_val_2_load_3_reg_1491 <= lineBuff_val_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        pixConvolved_2_reg_1436 <= pixConvolved_2_fu_752_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)))) begin
        reg_527 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY))) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)))) begin
        reg_531 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        reg_540 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) & (1'b0 == ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1))) begin
        sel_tmp10_reg_1700 <= sel_tmp10_fu_1147_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        sel_tmp2_reg_1290 <= sel_tmp2_fu_544_p2;
        sel_tmp5_reg_1295 <= sel_tmp5_fu_550_p2;
        sel_tmp8_reg_1300 <= sel_tmp8_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & ~(1'b0 == sel_tmp9_reg_1431) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        tmp1_reg_1630 <= tmp1_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) & ~(1'b0 == ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1))) begin
        tmp3_reg_1660 <= tmp3_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & ~(1'b0 == sel_tmp9_reg_1431))) begin
        tmp4_reg_1504 <= tmp4_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5) & (1'b0 == sel_tmp9_reg_1431))) begin
        tmp_14_reg_1496 <= tmp_14_fu_779_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & (1'b0 == sel_tmp9_reg_1431))) begin
        tmp_15_reg_1509 <= tmp_15_fu_801_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg6_fsm_7) & (1'b0 == sel_tmp9_reg_1431))) begin
        tmp_16_reg_1522 <= tmp_16_fu_819_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (1'b0 == sel_tmp9_reg_1431))) begin
        tmp_17_reg_1541 <= tmp_17_fu_858_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & (1'b0 == sel_tmp9_reg_1431))) begin
        tmp_18_reg_1566 <= tmp_18_fu_907_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b0 == sel_tmp9_reg_1431))) begin
        tmp_19_reg_1591 <= tmp_19_fu_944_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188) & (1'b0 == sel_tmp9_reg_1431) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        tmp_20_reg_1616 <= tmp_20_fu_981_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (1'b0 == sel_tmp9_reg_1431) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        tmp_21_reg_1641 <= tmp_21_fu_1023_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) & (1'b0 == ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1))) begin
        tmp_22_reg_1671 <= tmp_22_fu_1069_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) & ~(1'b0 == ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1))) begin
        tmp_6_reg_1690 <= valOutput_fu_1097_p2[ap_const_lv32_F];
        tmp_9_reg_1695 <= {{valOutput_fu_1097_p2[ap_const_lv32_F : ap_const_lv32_3]}};
        valOutput_reg_1685 <= valOutput_fu_1097_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188))) begin
        tmp_dest_V_1_reg_1380 <= inStream_TDEST;
        tmp_id_V_1_reg_1374 <= inStream_TID;
        tmp_keep_V_1_reg_1356 <= inStream_TKEEP;
        tmp_strb_V_1_reg_1362 <= inStream_TSTRB;
        tmp_user_V_1_reg_1368 <= inStream_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        tmp_dest_V_reg_458 <= ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1;
        tmp_id_V_reg_406 <= ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1;
        tmp_keep_V_reg_445 <= ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1;
        tmp_strb_V_reg_432 <= ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1;
        tmp_user_V_reg_419 <= ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (1'b0 == sel_tmp9_reg_1431) & (1'b0 == sel_tmp6_reg_1426) & ~(1'b0 == sel_tmp3_reg_1421))) begin
        valInWindow_0_maxVal_1_0_2_i_reg_1549 <= valInWindow_0_maxVal_1_0_2_i_fu_877_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b0 == sel_tmp9_reg_1431) & (1'b0 == sel_tmp6_reg_1426) & ~(1'b0 == sel_tmp3_reg_1421))) begin
        valInWindow_0_maxVal_1_1_1_i_reg_1599 <= valInWindow_0_maxVal_1_1_1_i_fu_952_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188) & (1'b0 == sel_tmp9_reg_1431) & (1'b0 == sel_tmp6_reg_1426) & ~(1'b0 == sel_tmp3_reg_1421) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        valInWindow_0_maxVal_1_1_2_i_reg_1624 <= valInWindow_0_maxVal_1_1_2_i_fu_989_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & (1'b0 == sel_tmp9_reg_1431) & (1'b0 == sel_tmp6_reg_1426) & ~(1'b0 == sel_tmp3_reg_1421))) begin
        valInWindow_0_maxVal_1_1_i_reg_1574 <= valInWindow_0_maxVal_1_1_i_fu_915_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) & (1'b0 == ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1) & (1'b0 == ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1) & ~(1'b0 == ap_reg_ppstg_sel_tmp3_reg_1421_pp0_iter1))) begin
        valInWindow_0_maxVal_1_2_1_i_reg_1679 <= valInWindow_0_maxVal_1_2_1_i_fu_1077_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (1'b0 == sel_tmp9_reg_1431) & (1'b0 == sel_tmp6_reg_1426) & ~(1'b0 == sel_tmp3_reg_1421) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        valInWindow_0_maxVal_1_2_i_reg_1649 <= valInWindow_0_maxVal_1_2_i_fu_1031_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (1'b0 == sel_tmp9_reg_1431) & ~(1'b0 == sel_tmp6_reg_1426))) begin
        valInWindow_0_minVal_1_0_2_i_reg_1535 <= valInWindow_0_minVal_1_0_2_i_fu_851_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b0 == sel_tmp9_reg_1431) & ~(1'b0 == sel_tmp6_reg_1426))) begin
        valInWindow_0_minVal_1_1_1_i_reg_1585 <= valInWindow_0_minVal_1_1_1_i_fu_938_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188) & (1'b0 == sel_tmp9_reg_1431) & ~(1'b0 == sel_tmp6_reg_1426) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        valInWindow_0_minVal_1_1_2_i_reg_1610 <= valInWindow_0_minVal_1_1_2_i_fu_975_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & (1'b0 == sel_tmp9_reg_1431) & ~(1'b0 == sel_tmp6_reg_1426))) begin
        valInWindow_0_minVal_1_1_i_reg_1560 <= valInWindow_0_minVal_1_1_i_fu_901_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1) & (1'b0 == ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1) & ~(1'b0 == ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1))) begin
        valInWindow_0_minVal_1_2_1_i_reg_1665 <= valInWindow_0_minVal_1_2_1_i_fu_1063_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (1'b0 == sel_tmp9_reg_1431) & ~(1'b0 == sel_tmp6_reg_1426) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        valInWindow_0_minVal_1_2_i_reg_1635 <= valInWindow_0_minVal_1_2_i_fu_1017_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5))) begin
        window_val_0_0_reg_1481 <= window_val_0_0_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg6_fsm_7))) begin
        window_val_0_2_reg_1517 <= window_val_0_2_fu_813_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg7_fsm_8))) begin
        window_val_1_0_reg_1530 <= window_val_1_0_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9))) begin
        window_val_1_1_reg_1555 <= window_val_1_1_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        window_val_1_2_reg_1580 <= window_val_1_2_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        window_val_2_0_reg_1605 <= window_val_2_0_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        window_val_2_2_reg_1655 <= window_val_2_2_fu_1044_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & ~((1'b0 == exitcond_fu_1224_p2) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & ~(1'b0 == exitcond_fu_1224_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & ~((1'b0 == exitcond_fu_1224_p2) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & ~(1'b0 == exitcond_fu_1224_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_270) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_65) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_219) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_249) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_198) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_260) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_208) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_237) begin
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_95) begin
        ap_sig_cseq_ST_st17_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_28) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_outStream_TREADY)) begin
        ap_sig_ioackin_outStream_TREADY = outStream_TREADY;
    end else begin
        ap_sig_ioackin_outStream_TREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        col_assign_phi_fu_475_p4 = idxCol_1_reg_1337;
    end else begin
        col_assign_phi_fu_475_p4 = col_assign_reg_471;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        countWait_phi_fu_509_p4 = phitmp_reg_1351;
    end else begin
        countWait_phi_fu_509_p4 = countWait_reg_505;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_1305 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        idxRow_phi_fu_486_p4 = idxRow_1_reg_1342;
    end else begin
        idxRow_phi_fu_486_p4 = idxRow_reg_482;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0))) begin
        inStream_TDATA_blk_n = inStream_TVALID;
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188))) begin
        inStream_TREADY = 1'b1;
    end else begin
        inStream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) begin
            kernel_address0 = ap_const_lv64_8;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)) begin
            kernel_address0 = ap_const_lv64_7;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) begin
            kernel_address0 = ap_const_lv64_6;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) begin
            kernel_address0 = ap_const_lv64_5;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) begin
            kernel_address0 = ap_const_lv64_4;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            kernel_address0 = ap_const_lv64_3;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            kernel_address0 = ap_const_lv64_2;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            kernel_address0 = ap_const_lv64_1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            kernel_address0 = ap_const_lv64_0;
        end else begin
            kernel_address0 = 'bx;
        end
    end else begin
        kernel_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY))) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            lineBuff_val_0_address0 = tmp_s_reg_1309;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_0_address0 = tmp_7_fu_683_p1;
        end else begin
            lineBuff_val_0_address0 = 'bx;
        end
    end else begin
        lineBuff_val_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            lineBuff_val_0_address1 = tmp_25_0_2_fu_759_p1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_0_address1 = tmp_25_0_1_fu_696_p1;
        end else begin
            lineBuff_val_0_address1 = 'bx;
        end
    end else begin
        lineBuff_val_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)))) begin
        lineBuff_val_0_ce0 = 1'b1;
    end else begin
        lineBuff_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)))) begin
        lineBuff_val_0_ce1 = 1'b1;
    end else begin
        lineBuff_val_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188))) begin
        lineBuff_val_0_we0 = 1'b1;
    end else begin
        lineBuff_val_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            lineBuff_val_1_address0 = lineBuff_val_1_addr_reg_1314;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_1_address0 = tmp_7_fu_683_p1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            lineBuff_val_1_address0 = tmp_s_fu_568_p1;
        end else begin
            lineBuff_val_1_address0 = 'bx;
        end
    end else begin
        lineBuff_val_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            lineBuff_val_1_address1 = tmp_25_0_2_fu_759_p1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_1_address1 = tmp_25_0_1_fu_696_p1;
        end else begin
            lineBuff_val_1_address1 = 'bx;
        end
    end else begin
        lineBuff_val_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        lineBuff_val_1_ce0 = 1'b1;
    end else begin
        lineBuff_val_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)))) begin
        lineBuff_val_1_ce1 = 1'b1;
    end else begin
        lineBuff_val_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188))) begin
        lineBuff_val_1_we0 = 1'b1;
    end else begin
        lineBuff_val_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            lineBuff_val_2_address0 = lineBuff_val_2_addr_reg_1319;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_2_address0 = tmp_7_fu_683_p1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            lineBuff_val_2_address0 = tmp_s_fu_568_p1;
        end else begin
            lineBuff_val_2_address0 = 'bx;
        end
    end else begin
        lineBuff_val_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            lineBuff_val_2_address1 = tmp_25_0_2_fu_759_p1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            lineBuff_val_2_address1 = tmp_25_0_1_fu_696_p1;
        end else begin
            lineBuff_val_2_address1 = 'bx;
        end
    end else begin
        lineBuff_val_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        lineBuff_val_2_ce0 = 1'b1;
    end else begin
        lineBuff_val_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)))) begin
        lineBuff_val_2_ce1 = 1'b1;
    end else begin
        lineBuff_val_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188))) begin
        lineBuff_val_2_we0 = 1'b1;
    end else begin
        lineBuff_val_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2))) begin
        outStream_TDATA = ap_const_lv8_0;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1))) begin
        outStream_TDATA = tmp_data_V_fu_1217_p3;
    end else begin
        outStream_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1)) | ((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2)))) begin
        outStream_TDATA_blk_n = outStream_TREADY;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2))) begin
        outStream_TDEST = tmp_dest_V_reg_458;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1))) begin
        outStream_TDEST = ap_reg_ppstg_tmp_dest_V_1_reg_1380_pp0_iter1;
    end else begin
        outStream_TDEST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2))) begin
        outStream_TID = tmp_id_V_reg_406;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1))) begin
        outStream_TID = ap_reg_ppstg_tmp_id_V_1_reg_1374_pp0_iter1;
    end else begin
        outStream_TID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2))) begin
        outStream_TKEEP = tmp_keep_V_reg_445;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1))) begin
        outStream_TKEEP = ap_reg_ppstg_tmp_keep_V_1_reg_1356_pp0_iter1;
    end else begin
        outStream_TKEEP = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2))) begin
        outStream_TLAST = countWait_1_reg_516[ap_const_lv32_9];
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1))) begin
        outStream_TLAST = 1'b0;
    end else begin
        outStream_TLAST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2))) begin
        outStream_TSTRB = tmp_strb_V_reg_432;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1))) begin
        outStream_TSTRB = ap_reg_ppstg_tmp_strb_V_1_reg_1362_pp0_iter1;
    end else begin
        outStream_TSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2))) begin
        outStream_TUSER = tmp_user_V_reg_419;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1))) begin
        outStream_TUSER = ap_reg_ppstg_tmp_user_V_1_reg_1368_pp0_iter1;
    end else begin
        outStream_TUSER = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_reg_ioackin_outStream_TREADY)) | ((1'b1 == ap_sig_cseq_ST_st17_fsm_10) & (1'b0 == exitcond_fu_1224_p2) & (1'b0 == ap_reg_ioackin_outStream_TREADY)))) begin
        outStream_TVALID = 1'b1;
    end else begin
        outStream_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (1'b0 == ap_reg_ppstg_exitcond1_reg_1305_pp0_iter1))) begin
        pixConvolved_phi_fu_497_p4 = pixConvolved_2_reg_1436;
    end else begin
        pixConvolved_phi_fu_497_p4 = pixConvolved_reg_493;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(1'b0 == exitcond1_fu_562_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_10;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_188)) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end
        end
        ap_ST_pp0_stg2_fsm_3 : begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
        end
        ap_ST_pp0_stg3_fsm_4 : begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
        end
        ap_ST_pp0_stg4_fsm_5 : begin
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
        end
        ap_ST_pp0_stg5_fsm_6 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & ~(1'b1 == ap_reg_ppiten_pp0_it0)))) begin
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ~(1'b0 == ap_reg_ppstg_tmp_12_reg_1347_pp0_iter1) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & ~(1'b1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_st17_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
            end
        end
        ap_ST_pp0_stg6_fsm_7 : begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
        end
        ap_ST_pp0_stg7_fsm_8 : begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_9;
        end
        ap_ST_pp0_stg8_fsm_9 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st17_fsm_10 : begin
            if ((~((1'b0 == exitcond_fu_1224_p2) & (1'b0 == ap_sig_ioackin_outStream_TREADY)) & ~(1'b0 == exitcond_fu_1224_p2))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((1'b0 == exitcond_fu_1224_p2) & ~((1'b0 == exitcond_fu_1224_p2) & (1'b0 == ap_sig_ioackin_outStream_TREADY)))) begin
                ap_NS_fsm = ap_ST_st17_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_1220 = ((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_1305 == 1'b0));
end

always @ (*) begin
    ap_sig_188 = ((exitcond1_reg_1305 == 1'b0) & (inStream_TVALID == 1'b0));
end

always @ (*) begin
    ap_sig_198 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_208 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_219 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_237 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_249 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_260 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_270 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_28 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_65 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_82 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_95 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

assign col_assign_1_0_2_fu_703_p2 = (ap_const_lv32_2 + pixConvolved_phi_fu_497_p4);

assign countWait_2_fu_1230_p2 = (countWait_1_reg_516 + ap_const_lv10_1);

assign exitcond1_fu_562_p2 = ((countWait_phi_fu_509_p4 == ap_const_lv19_40001) ? 1'b1 : 1'b0);

assign exitcond_fu_1224_p2 = ((countWait_1_reg_516 == ap_const_lv10_201) ? 1'b1 : 1'b0);

assign icmp4_fu_600_p2 = (($signed(tmp_4_fu_590_p4) > $signed(31'b0000000000000000000000000000000)) ? 1'b1 : 1'b0);

assign icmp_fu_584_p2 = (($signed(tmp_3_fu_574_p4) > $signed(31'b0000000000000000000000000000000)) ? 1'b1 : 1'b0);

assign idxCol_1_fu_630_p3 = ((tmp_11_fu_612_p2[0:0] === 1'b1) ? idxCol_fu_618_p2 : ap_const_lv32_0);

assign idxCol_fu_618_p2 = (ap_const_lv32_1 + col_assign_phi_fu_475_p4);

assign idxRow_1_fu_638_p3 = ((tmp_11_fu_612_p2[0:0] === 1'b1) ? idxRow_phi_fu_486_p4 : idxRow_2_fu_624_p2);

assign idxRow_2_fu_624_p2 = (ap_const_lv32_1 + idxRow_phi_fu_486_p4);

assign or_cond_fu_606_p2 = (icmp_fu_584_p2 & icmp4_fu_600_p2);

assign p_neg_fu_1157_p2 = ($signed(ap_const_lv17_0) - $signed(tmp_18_tr_fu_1154_p1));

assign p_s_fu_1209_p3 = ((tmp_13_fu_1201_p3[0:0] === 1'b1) ? ap_const_lv8_0 : tmp_10_fu_1197_p1);

assign phitmp_fu_652_p2 = (countWait_phi_fu_509_p4 + ap_const_lv19_1);

assign pixConvolved_1_fu_744_p3 = ((sel_tmp9_fu_740_p2[0:0] === 1'b1) ? pixConvolved_3_fu_690_p2 : sel_tmp7_fu_732_p3);

assign pixConvolved_2_fu_752_p3 = ((tmp_11_reg_1332[0:0] === 1'b1) ? pixConvolved_1_fu_744_p3 : ap_const_lv32_0);

assign pixConvolved_3_fu_690_p2 = (ap_const_lv32_1 + pixConvolved_phi_fu_497_p4);

assign sel_tmp10_fu_1147_p3 = ((ap_reg_ppstg_sel_tmp6_reg_1426_pp0_iter1[0:0] === 1'b1) ? valInWindow_0_minVal_1_2_2_i_fu_1124_p3 : sel_tmp_fu_1140_p3);

assign sel_tmp1_fu_709_p3 = ((or_cond_reg_1324[0:0] === 1'b1) ? pixConvolved_3_fu_690_p2 : pixConvolved_phi_fu_497_p4);

assign sel_tmp2_fu_544_p2 = ((operation == ap_const_lv32_2) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_716_p2 = (or_cond_reg_1324 & sel_tmp2_reg_1290);

assign sel_tmp4_fu_720_p3 = ((sel_tmp3_fu_716_p2[0:0] === 1'b1) ? pixConvolved_3_fu_690_p2 : sel_tmp1_fu_709_p3);

assign sel_tmp5_fu_550_p2 = ((operation == ap_const_lv32_1) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_728_p2 = (or_cond_reg_1324 & sel_tmp5_reg_1295);

assign sel_tmp7_fu_732_p3 = ((sel_tmp6_fu_728_p2[0:0] === 1'b1) ? pixConvolved_3_fu_690_p2 : sel_tmp4_fu_720_p3);

assign sel_tmp8_fu_556_p2 = ((operation == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_740_p2 = (or_cond_reg_1324 & sel_tmp8_reg_1300);

assign sel_tmp_fu_1140_p3 = ((ap_reg_ppstg_sel_tmp3_reg_1421_pp0_iter1[0:0] === 1'b1) ? valInWindow_0_maxVal_1_2_2_i_fu_1134_p3 : ap_const_lv8_0);

assign tmp1_fu_1008_p2 = (window_val_2_1_fu_1002_p2 + window_val_2_0_reg_1605);

assign tmp2_fu_1050_p2 = (window_val_1_1_reg_1555 + window_val_1_2_reg_1580);

assign tmp3_fu_1054_p2 = (tmp1_reg_1630 + tmp2_fu_1050_p2);

assign tmp4_fu_796_p2 = (window_val_0_0_reg_1481 + window_val_0_1_fu_790_p2);

assign tmp5_fu_1083_p2 = (window_val_2_2_reg_1655 + window_val_0_2_reg_1517);

assign tmp6_fu_1087_p2 = (window_val_1_0_reg_1530 + tmp5_fu_1083_p2);

assign tmp7_fu_1092_p2 = (tmp4_reg_1504 + tmp6_fu_1087_p2);

assign tmp_10_cast_fu_1186_p1 = $unsigned(tmp_1_fu_1177_p1);

assign tmp_10_fu_1197_p1 = valOutput_1_fu_1190_p3[7:0];

assign tmp_11_0_1_i_fu_862_p2 = ((tmp_15_reg_1509 > tmp_14_reg_1496) ? 1'b1 : 1'b0);

assign tmp_11_0_2_i_fu_872_p2 = ((tmp_16_reg_1522 > valInWindow_0_maxVal_1_0_1_i_fu_866_p3) ? 1'b1 : 1'b0);

assign tmp_11_1_1_i_fu_948_p2 = ((tmp_18_reg_1566 > valInWindow_0_maxVal_1_1_i_reg_1574) ? 1'b1 : 1'b0);

assign tmp_11_1_2_i_fu_985_p2 = ((tmp_19_reg_1591 > valInWindow_0_maxVal_1_1_1_i_reg_1599) ? 1'b1 : 1'b0);

assign tmp_11_1_i_fu_911_p2 = ((tmp_17_reg_1541 > valInWindow_0_maxVal_1_0_2_i_reg_1549) ? 1'b1 : 1'b0);

assign tmp_11_2_1_i_fu_1073_p2 = ((tmp_21_reg_1641 > valInWindow_0_maxVal_1_2_i_reg_1649) ? 1'b1 : 1'b0);

assign tmp_11_2_2_i_fu_1130_p2 = ((tmp_22_reg_1671 > valInWindow_0_maxVal_1_2_1_i_reg_1679) ? 1'b1 : 1'b0);

assign tmp_11_2_i_fu_1027_p2 = ((tmp_20_reg_1616 > valInWindow_0_maxVal_1_1_2_i_reg_1624) ? 1'b1 : 1'b0);

assign tmp_11_fu_612_p2 = (($signed(col_assign_phi_fu_475_p4) < $signed(32'b111111111)) ? 1'b1 : 1'b0);

assign tmp_12_fu_646_p2 = ((countWait_phi_fu_509_p4 > ap_const_lv19_201) ? 1'b1 : 1'b0);

assign tmp_13_fu_1201_p3 = valOutput_1_fu_1190_p3[ap_const_lv32_E];

assign tmp_14_fu_779_p1 = window_val_0_0_fu_773_p2[7:0];

assign tmp_15_fu_801_p1 = window_val_0_1_fu_790_p2[7:0];

assign tmp_16_fu_819_p1 = window_val_0_2_fu_813_p2[7:0];

assign tmp_17_fu_858_p1 = window_val_1_0_fu_830_p2[7:0];

assign tmp_18_fu_907_p1 = window_val_1_1_fu_891_p2[7:0];

assign tmp_18_tr_fu_1154_p1 = $signed(valOutput_reg_1685);

assign tmp_19_fu_944_p1 = window_val_1_2_fu_928_p2[7:0];

assign tmp_1_fu_1177_p1 = $signed(tmp_9_reg_1695);

assign tmp_20_fu_981_p1 = window_val_2_0_fu_965_p2[7:0];

assign tmp_21_fu_1023_p1 = window_val_2_1_fu_1002_p2[7:0];

assign tmp_22_fu_1069_p1 = window_val_2_2_fu_1044_p2[7:0];

assign tmp_25_0_1_fu_696_p1 = pixConvolved_3_fu_690_p2;

assign tmp_25_0_2_fu_759_p1 = col_assign_1_0_2_reg_1396;

assign tmp_2_fu_1180_p2 = (ap_const_lv15_0 - tmp_7_cast_fu_1173_p1);

assign tmp_3_fu_574_p4 = {{idxRow_phi_fu_486_p4[ap_const_lv32_1F : ap_const_lv32_1]}};

assign tmp_4_fu_590_p4 = {{col_assign_phi_fu_475_p4[ap_const_lv32_1F : ap_const_lv32_1]}};

assign tmp_5_0_1_i_fu_836_p2 = ((tmp_15_reg_1509 < tmp_14_reg_1496) ? 1'b1 : 1'b0);

assign tmp_5_0_2_i_fu_846_p2 = ((tmp_16_reg_1522 < valInWindow_0_minVal_1_0_1_i_fu_840_p3) ? 1'b1 : 1'b0);

assign tmp_5_1_1_i_fu_934_p2 = ((tmp_18_reg_1566 < valInWindow_0_minVal_1_1_i_reg_1560) ? 1'b1 : 1'b0);

assign tmp_5_1_2_i_fu_971_p2 = ((tmp_19_reg_1591 < valInWindow_0_minVal_1_1_1_i_reg_1585) ? 1'b1 : 1'b0);

assign tmp_5_1_i_fu_897_p2 = ((tmp_17_reg_1541 < valInWindow_0_minVal_1_0_2_i_reg_1535) ? 1'b1 : 1'b0);

assign tmp_5_2_1_i_fu_1059_p2 = ((tmp_21_reg_1641 < valInWindow_0_minVal_1_2_i_reg_1635) ? 1'b1 : 1'b0);

assign tmp_5_2_2_i_fu_1120_p2 = ((tmp_22_reg_1671 < valInWindow_0_minVal_1_2_1_i_reg_1665) ? 1'b1 : 1'b0);

assign tmp_5_2_i_fu_1013_p2 = ((tmp_20_reg_1616 < valInWindow_0_minVal_1_1_2_i_reg_1610) ? 1'b1 : 1'b0);

assign tmp_7_cast_fu_1173_p1 = tmp_8_fu_1163_p4;

assign tmp_7_fu_683_p1 = pixConvolved_phi_fu_497_p4;

assign tmp_8_fu_1163_p4 = {{p_neg_fu_1157_p2[ap_const_lv32_10 : ap_const_lv32_3]}};

assign tmp_data_V_fu_1217_p3 = ((ap_reg_ppstg_sel_tmp9_reg_1431_pp0_iter1[0:0] === 1'b1) ? p_s_fu_1209_p3 : sel_tmp10_reg_1700);

assign tmp_s_fu_568_p1 = col_assign_phi_fu_475_p4;

assign valInWindow_0_maxVal_1_0_1_i_fu_866_p3 = ((tmp_11_0_1_i_fu_862_p2[0:0] === 1'b1) ? tmp_15_reg_1509 : tmp_14_reg_1496);

assign valInWindow_0_maxVal_1_0_2_i_fu_877_p3 = ((tmp_11_0_2_i_fu_872_p2[0:0] === 1'b1) ? tmp_16_reg_1522 : valInWindow_0_maxVal_1_0_1_i_fu_866_p3);

assign valInWindow_0_maxVal_1_1_1_i_fu_952_p3 = ((tmp_11_1_1_i_fu_948_p2[0:0] === 1'b1) ? tmp_18_reg_1566 : valInWindow_0_maxVal_1_1_i_reg_1574);

assign valInWindow_0_maxVal_1_1_2_i_fu_989_p3 = ((tmp_11_1_2_i_fu_985_p2[0:0] === 1'b1) ? tmp_19_reg_1591 : valInWindow_0_maxVal_1_1_1_i_reg_1599);

assign valInWindow_0_maxVal_1_1_i_fu_915_p3 = ((tmp_11_1_i_fu_911_p2[0:0] === 1'b1) ? tmp_17_reg_1541 : valInWindow_0_maxVal_1_0_2_i_reg_1549);

assign valInWindow_0_maxVal_1_2_1_i_fu_1077_p3 = ((tmp_11_2_1_i_fu_1073_p2[0:0] === 1'b1) ? tmp_21_reg_1641 : valInWindow_0_maxVal_1_2_i_reg_1649);

assign valInWindow_0_maxVal_1_2_2_i_fu_1134_p3 = ((tmp_11_2_2_i_fu_1130_p2[0:0] === 1'b1) ? tmp_22_reg_1671 : valInWindow_0_maxVal_1_2_1_i_reg_1679);

assign valInWindow_0_maxVal_1_2_i_fu_1031_p3 = ((tmp_11_2_i_fu_1027_p2[0:0] === 1'b1) ? tmp_20_reg_1616 : valInWindow_0_maxVal_1_1_2_i_reg_1624);

assign valInWindow_0_minVal_1_0_1_i_fu_840_p3 = ((tmp_5_0_1_i_fu_836_p2[0:0] === 1'b1) ? tmp_15_reg_1509 : tmp_14_reg_1496);

assign valInWindow_0_minVal_1_0_2_i_fu_851_p3 = ((tmp_5_0_2_i_fu_846_p2[0:0] === 1'b1) ? tmp_16_reg_1522 : valInWindow_0_minVal_1_0_1_i_fu_840_p3);

assign valInWindow_0_minVal_1_1_1_i_fu_938_p3 = ((tmp_5_1_1_i_fu_934_p2[0:0] === 1'b1) ? tmp_18_reg_1566 : valInWindow_0_minVal_1_1_i_reg_1560);

assign valInWindow_0_minVal_1_1_2_i_fu_975_p3 = ((tmp_5_1_2_i_fu_971_p2[0:0] === 1'b1) ? tmp_19_reg_1591 : valInWindow_0_minVal_1_1_1_i_reg_1585);

assign valInWindow_0_minVal_1_1_i_fu_901_p3 = ((tmp_5_1_i_fu_897_p2[0:0] === 1'b1) ? tmp_17_reg_1541 : valInWindow_0_minVal_1_0_2_i_reg_1535);

assign valInWindow_0_minVal_1_2_1_i_fu_1063_p3 = ((tmp_5_2_1_i_fu_1059_p2[0:0] === 1'b1) ? tmp_21_reg_1641 : valInWindow_0_minVal_1_2_i_reg_1635);

assign valInWindow_0_minVal_1_2_2_i_fu_1124_p3 = ((tmp_5_2_2_i_fu_1120_p2[0:0] === 1'b1) ? tmp_22_reg_1671 : valInWindow_0_minVal_1_2_1_i_reg_1665);

assign valInWindow_0_minVal_1_2_i_fu_1017_p3 = ((tmp_5_2_i_fu_1013_p2[0:0] === 1'b1) ? tmp_20_reg_1616 : valInWindow_0_minVal_1_1_2_i_reg_1610);

assign valOutput_1_fu_1190_p3 = ((tmp_6_reg_1690[0:0] === 1'b1) ? tmp_2_fu_1180_p2 : tmp_10_cast_fu_1186_p1);

assign valOutput_fu_1097_p2 = (tmp3_reg_1660 + tmp7_fu_1092_p2);

assign window_val_0_0_fu_773_p0 = reg_527;

assign window_val_0_0_fu_773_p1 = window_val_0_0_fu_773_p10;

assign window_val_0_0_fu_773_p10 = reg_535;

assign window_val_0_0_fu_773_p2 = ($signed(window_val_0_0_fu_773_p0) * $signed({{1'b0}, {window_val_0_0_fu_773_p1}}));

assign window_val_0_1_fu_790_p0 = reg_531;

assign window_val_0_1_fu_790_p1 = window_val_0_1_fu_790_p10;

assign window_val_0_1_fu_790_p10 = lineBuff_val_0_load_1_reg_1441;

assign window_val_0_1_fu_790_p2 = ($signed(window_val_0_1_fu_790_p0) * $signed({{1'b0}, {window_val_0_1_fu_790_p1}}));

assign window_val_0_2_fu_813_p0 = reg_540;

assign window_val_0_2_fu_813_p1 = window_val_0_2_fu_813_p10;

assign window_val_0_2_fu_813_p10 = reg_535;

assign window_val_0_2_fu_813_p2 = ($signed(window_val_0_2_fu_813_p0) * $signed({{1'b0}, {window_val_0_2_fu_813_p1}}));

assign window_val_1_0_fu_830_p0 = reg_527;

assign window_val_1_0_fu_830_p1 = window_val_1_0_fu_830_p10;

assign window_val_1_0_fu_830_p10 = lineBuff_val_1_load_1_reg_1451;

assign window_val_1_0_fu_830_p2 = ($signed(window_val_1_0_fu_830_p0) * $signed({{1'b0}, {window_val_1_0_fu_830_p1}}));

assign window_val_1_1_fu_891_p0 = reg_531;

assign window_val_1_1_fu_891_p1 = window_val_1_1_fu_891_p10;

assign window_val_1_1_fu_891_p10 = lineBuff_val_1_load_2_reg_1456;

assign window_val_1_1_fu_891_p2 = ($signed(window_val_1_1_fu_891_p0) * $signed({{1'b0}, {window_val_1_1_fu_891_p1}}));

assign window_val_1_2_fu_928_p0 = reg_540;

assign window_val_1_2_fu_928_p1 = window_val_1_2_fu_928_p10;

assign window_val_1_2_fu_928_p10 = lineBuff_val_1_load_3_reg_1486;

assign window_val_1_2_fu_928_p2 = ($signed(window_val_1_2_fu_928_p0) * $signed({{1'b0}, {window_val_1_2_fu_928_p1}}));

assign window_val_2_0_fu_965_p0 = reg_527;

assign window_val_2_0_fu_965_p1 = window_val_2_0_fu_965_p10;

assign window_val_2_0_fu_965_p10 = lineBuff_val_2_load_1_reg_1466;

assign window_val_2_0_fu_965_p2 = ($signed(window_val_2_0_fu_965_p0) * $signed({{1'b0}, {window_val_2_0_fu_965_p1}}));

assign window_val_2_1_fu_1002_p0 = reg_531;

assign window_val_2_1_fu_1002_p1 = window_val_2_1_fu_1002_p10;

assign window_val_2_1_fu_1002_p10 = lineBuff_val_2_load_2_reg_1471;

assign window_val_2_1_fu_1002_p2 = ($signed(window_val_2_1_fu_1002_p0) * $signed({{1'b0}, {window_val_2_1_fu_1002_p1}}));

assign window_val_2_2_fu_1044_p0 = reg_540;

assign window_val_2_2_fu_1044_p1 = window_val_2_2_fu_1044_p10;

assign window_val_2_2_fu_1044_p10 = lineBuff_val_2_load_3_reg_1491;

assign window_val_2_2_fu_1044_p2 = ($signed(window_val_2_2_fu_1044_p0) * $signed({{1'b0}, {window_val_2_2_fu_1044_p1}}));

always @ (posedge ap_clk) begin
    tmp_s_reg_1309[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //doImgProc
